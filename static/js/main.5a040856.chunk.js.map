{"version":3,"sources":["store/actions/actionCreators.js","store/database/asynchHandler.js","firebase.js","components/navbar/LoggedIn.js","components/navbar/LoggedOut.js","components/navbar/Navbar.js","components/home/HomeScreen.js","components/user/ProfileInput.js","components/user/CollegeInput.js","components/user/ScoreInput.js","components/user/SelectInput.js","components/user/UserProfileScreen.js","components/register/RegisterScreen.js","components/login/LoginScreen.js","components/high_schools/HighSchoolSearchScreen.js","components/colleges/RangeInput.js","components/colleges/SelectorInput.js","components/colleges/SelectorInputMajor.js","components/colleges/CollegeSearchScreen.js","components/colleges/CollegeInfoScreen.js","components/admin/AdminScreen.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/todoListReducer.js","store/reducers/rootReducer.js","store/ReactReduxFirebaseApp.js","index.js"],"names":["logoutSuccess","type","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","LoggedIn","handleLogout","props","signOut","handleLogOutRefresh","accountInfo","this","className","to","pathname","info","onClick","React","Component","compose","firebaseConnect","connect","dispatch","getState","auth","then","actionCreators","logoutHandler","LoggedOut","Navbar","window","location","reload","profile","links","uid","bind","console","log","state","data","firestoreConnect","collection","where","email","HomeScreen","ProfileInput","divClass","children","charAt","toLowerCase","replace","slice","s","defaultValue","inputValue","isPassword","name","id","onChange","handleChange","disabled","enabled","CollegeInput","optionIndex","toString","decisionClass","questionableClass","locked","document","getElementById","value","inputValueReceived","options","map","choice","index","key","ScoreInput","SelectInput","hideLabel","smallDiv","UserProfileScreen","classNumbers","majorsList","states","password","e","target","querySelector","classList","remove","setState","handleSubmit","preventDefault","validData","checkSATScores","checkACTScores","filledData","checkGPA","collegesSelected","i","current","forEach","selected","add","push","scoresChanged","questionableColleges","approvedColleges","decisionsRef","approvedRef","tempAccount","profileInfo","tempID","Object","keys","userID","tempQuestionable","tempQInfo","profileID","t1","t2","act_composite","sat_math","sat_ebrw","gpa","applied_colleges","college","approvedSchoolName","doc","update","FieldValue","delete","catch","error","innerHTML","schoolName","schoolDecision","parsedSchoolName","sum","get","querySnapshot","size","temp","userFields","sat_Math","sat_Read","act_ENG","field","parseInt","Math","round","decision","reviewed","set","parseFloat","merge","colleges","alert","appliedColleges","temp2Account","tempProfile","userid","act_english","act_math","act_reading","act_science","college_class","high_school_city","high_school_name","high_school_state","major_1","major_2","num_ap_passed","residence_state","sat_chemistry","sat_eco_bio","sat_literature","sat_math_i","sat_math_ii","sat_mol_bio","sat_physics","sat_us_hist","sat_world_hist","forceUpdate","removeCollege","addCollege","text","collegesArray","split","applyArray","collegeData","HarvardUniversity","satMath25","satMath75","satEBRW25","satEBRW75","actComposite25","actComposite75","StonyBrookUniversity","KalamazooCollege","tvalue","fieldValid","Number","isInteger","authError","acc","acc2","temp2","firstName","lastName","onSubmit","lastname","updateState","entries","acc3","RegisterScreen","userId","addToDB","idUsed","snapshot","err","createUserWithEmailAndPassword","message","htmlFor","LoginScreen","authData","credentials","login","signInWithEmailAndPassword","loginHandler","HighSchoolSearchScreen","Name","highschools","GradRate","State","Ranking","AvgSATMath","AvgSATEBRW","AvgACTComposite","Type","highDict","highRef","str1","str2","findSimilarity","sortTasks","sortingCriteria","list","sort","compareSimilarValues","splice","length","newList","a","b","total","abs","hsDict","similarity","compareScore","compareStrings","SimilarValue","item1","item2","highschool","RangeInput","divClassMin","divClassMax","prefix","suffix","SelectorInput","SelectorInputMajor","CollegeSearchScreen","locations","majors","admissionRateMin","filterName","admissionRateMax","costOfAttendanceMin","costOfAttendanceMax","sizeMin","sizeMax","major1","major2","rankingMin","rankingMax","sATMathMin","sATMathMax","sATEBRWMin","sATEBRWMax","aCTCompositeMin","aCTCompositeMax","filterType","collegeDict","collegesRef","tempAddition","AdmissionRate","CostOfAttendance","Location","Major1","Major2","Major3","Size","includes","handleCheck","handleSelect","filters","currentItemSortCriteria","newItemSortCriteria","flipped","flip","compareNameFlip","compareRankingFlip","compareAdmissionFlip","compareCostFlip","compareScoreFlip","compareName","compareRanking","compareAdmission","compareCost","checked","min","max","resetFilters","CollegeInfoScreen","collegeInfo","infoCollege","ownProps","AdminScreen","decisions","scrapeRes","handleFileLoad","datum","handleApplicationFileLoad","fullData","allDecisions","userData","status","user","application","deleteAll","papaParse","header","dynamicTyping","skipEmptyLines","transformHeader","scrapeResults","fetch","response","json","JSON","stringify","scrapeUpdateCollegeScorecard","scrapeHighschoolData","event","dec","questionableDecisions","cssClass","label","onFileLoaded","parserOptions","class","approveDecision","denyDecision","scrapeUpdateFirebase","App","apiResponse","res","callAPI","exact","path","component","Boolean","hostname","match","initState","authReducer","action","todoLists","todoListReducer","rootReducer","combineReducers","todoList","firestoreReducer","firebaseReducer","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a040856.chunk.js","sourcesContent":["// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\nexport function registerSuccess() {\n    return { type: 'REGISTER_SUCCESS' }\n};\nexport function registerError(error) { \n    return { type: 'REGISTER_ERROR', error }\n};\nexport function loginSuccess() {\n    return { type: 'LOGIN_SUCCESS' }\n};\nexport function loginError(error) {\n    return { type: 'LOGIN_ERROR', error }\n};\nexport function logoutSuccess() {\n    return { type: 'LOGOUT_SUCCESS' }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\nexport function createTodoList(todoList) {\n    return {\n        type: 'CREATE_TODO_LIST',\n        todoList\n    }\n}\nexport function createTodoListError(error) {\n    return {\n        type: 'CREATE_TODO_LIST_ERROR',\n        error\n    }\n}","import * as actionCreators from '../actions/actionCreators.js'\n\nexport const loginHandler = ({ credentials, firebase }) => (dispatch, getState) => {\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      console.log(\"LOGIN_SUCCESS\");\n      alert(\"Login Successful\");\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      alert(\"Incorrect Email and/or Password\");\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSuccess);\n    });\n};\n\nexport const registerHandler = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n        newUser.email,\n        newUser.password,\n    ).then(resp => firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\n    })).then(() => {\n        dispatch(actionCreators.registerSuccess);\n    }).catch((err) => {\n        dispatch(actionCreators.registerError);\n    });\n};","import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCzdKgJKjJweCBpgQ6ifA1yrwgRthdOdxM\",\n    authDomain: \"c4me-729ad.firebaseapp.com\",\n    databaseURL: \"https://c4me-729ad.firebaseio.com\",\n    projectId: \"c4me-729ad\",\n    storageBucket: \"c4me-729ad.appspot.com\",\n    messagingSenderId: \"839711745341\",\n    appId: \"1:839711745341:web:fda5079ac455a3598cd154\",\n    measurementId: \"G-6M38QQ76Q1\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport { db };\n\nexport default firebase;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { logoutHandler } from '../../store/database/asynchHandler'\nimport { Modal, Button, Row, Col } from 'react-materialize';\nimport { firebase, db} from '../../firebase';\n\nclass LoggedIn extends React.Component {\n  handleLogout = () => {\n    const { firebase } = this.props;\n    this.props.signOut(firebase);\n    this.props.handleLogOutRefresh();\n  }\n\n  render() {\n    const { accountInfo } = this.props;\n\n    return (\n      <div className=\"col s3 nav-main-menu-accounts\">\n        <div className=\"nav-account-item\">\n        <Link to={{pathname: \"/user\", info: {accountInfo}}}>\n            <Button className=\"nav-login-button cyan lighten-3\">\n              <div  className=\"nav-account-text\">Edit Profile</div>\n            </Button>\n          </Link>\n        </div>\n        <div className=\"nav-account-item\">\n          <NavLink to=\"/\" onClick={this.handleLogout}>\n            <Button className=\"nav-register-button red accent-2\">\n              <div  className=\"nav-account-text\">Log Out</div>\n            </Button>\n          </NavLink>\n        </div>\n      </div>\n    );\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: firebase => dispatch(logoutHandler(firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(null, mapDispatchToProps),\n)(LoggedIn);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\n\nclass LoggedOut extends React.Component {\n\n  render() {\n    return (\n      <div className=\"col s3 nav-main-menu-accounts\">\n        <div className=\"nav-account-item\">\n        <Link to=\"/login\">\n            <Button className=\"nav-login-button teal accent-3\">\n              <div  className=\"nav-account-text\">Login</div>\n            </Button>\n          </Link>\n        </div>\n        <div className=\"nav-account-item\">\n          <Link to=\"/register\">\n            <Button className=\"nav-register-button cyan accent-3\">\n              <div  className=\"nav-account-text\">Register</div>\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default compose()(LoggedOut);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport LoggedIn from './LoggedIn';\nimport LoggedOut from './LoggedOut';\n\nclass Navbar extends React.Component {\n\n  handleLogOutRefresh(){\n    window.location.reload(); \n  }\n\n  render() {\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <LoggedIn profile={profile}\n                                        accountInfo={this.props.accountInfo}\n                                        handleLogOutRefresh = {this.handleLogOutRefresh.bind(this)} /> : <LoggedOut\n                                        />;\n\n                                        console.log(this.props.accountInfo);\n    return (\n      <div>\n        <div className=\"nav-shadow z-depth-4\">\n        </div>\n        <div className=\"nav-wrapper\">\n          <div className=\"row\">\n            <div className=\"col s9 nav-main-menu\">\n              <div className=\"nav-logo\">\n              <Link to=\"/\">\n                <Button className=\"nav-home-button\">\n                  <div  className=\"nav-header-text\">c4me</div>\n                </Button>\n              </Link>\n              </div>\n              <div className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-item-text\">Home</Link>\n              </div>\n              <div className=\"nav-item\">\n                <Link to=\"/colleges\" className=\"nav-item-text\">College Search</Link>\n              </div>\n              <div className=\"nav-item\">\n                <Link to=\"/high_schools\" className=\"nav-item-text\">Similar High Schools</Link>\n              </div>\n              <div className=\"nav-item\">\n                <Link to=\"/admin\" className=\"nav-item-text\">Admin Settings</Link>\n              </div>\n            </div>\n            {links}\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    accountInfo: state.firestore.data,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect(props => {\n    if (!props.auth.uid) \n    {\n        return [];\n    }\n    else\n    {\n        return [\n        { collection: 'Accounts',\n            where: ['email', '==', props.auth.email]\n        }];\n    }\n}),\n)(Navbar);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass HomeScreen extends React.Component {\n\n  render() {\n    return (\n      <div className=\"outlet home-container\">\n        <div className=\"white home-text\">\n          Welcome to c4me.\n          <br />\n          <br />\n          <div className=\"home-flavor-text\">\n            Created by FASS:  Franky Pan, Amta Sulaiman, Shawn Felix, and Sean Spencer\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default compose()(HomeScreen);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\n\nclass ProfileInput extends React.Component {\n  constructor(props){\n    super(props);\n    this.divClass = this.props.children.charAt(0).toLowerCase()+(this.props.children.replace(/\\s/g, '')).slice(1);\n  }\n\n  render() {\n    return (\n      <Row className=\"profile-row\">\n        <Col s={3}>\n          <div className=\"profile-label\">\n            {this.props.children}:\n          </div>\n        </Col>\n        <Col s={5}>\n          <div className=\"profile-input\">\n            <input defaultValue={this.props.inputValue} className=\"active\" type={this.props.isPassword || \"text\"} name={this.divClass} id={this.divClass} onChange={this.props.handleChange} disabled={!this.props.enabled} />\n          </div>\n        </Col>\n      </Row>\n    );\n  };\n}\n\nexport default compose()(ProfileInput);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\n\nclass CollegeInput extends React.Component {\n  constructor(props){\n    super(props);\n    this.divClass = \"school\"+this.props.optionIndex.toString();\n    this.decisionClass = \"decision\"+this.props.optionIndex.toString();\n    this.questionableClass = \"questionable\"+this.props.optionIndex.toString();\n    this.locked = false;\n  }\n\n  inputValueReceived(){\n    if (this.props.inputValue){\n      console.log(this.props.inputValue);\n      if(!this.locked && document.getElementById(this.divClass) && document.getElementById(this.decisionClass)){\n        this.locked = true;\n        document.getElementById(this.divClass).value = this.props.inputValue[0];\n        document.getElementById(this.decisionClass).value = this.props.inputValue[1];\n      }\n    }\n  }\n\n  render() {\n\n    if (this.props.inputValue){\n      this.inputValueReceived();\n    }\n\n    return (\n      <Row className=\"profile-row college-input\">\n        <Col s={6}>\n          <div className=\"profile-input\">\n            <select className=\"browser-default\" name={this.divClass} id={this.divClass} onChange={this.props.handleChange}>\n              <option value=\"0\">Select a College</option>\n              {this.props.options.map((choice, index) => {\n                return <option key={index+1} value={choice.replace(/,/g, '')}>{choice}</option>;\n              })}\n            </select>\n          </div>\n        </Col>\n        <Col s={2}>\n          <div className=\"profile-input\">\n            <select className=\"active browser-default\" name={this.decisionClass} id={this.decisionClass} onChange={this.props.handleChange}>\n              <option value=\"0\"></option>\n              <option value=\"pending\">Pending</option>\n              <option value=\"accepted\">Accepted</option>\n              <option value=\"denied\">Denied</option>\n              <option value=\"deferred\">Deferred</option>\n              <option value=\"wait-listed\">Wait-listed</option>\n              <option value=\"withdrawn\">Withdrawn</option>\n            </select>\n          </div>\n        </Col>\n        <Col s={4}>\n          <div id={this.questionableClass}>\n            No evaluation.\n          </div>\n          <div className=\"disclaimer\">\n            *(Will not be shown in the final version)\n          </div>\n        </Col>\n      </Row>\n    );\n  };\n}\n\nexport default compose()(CollegeInput);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\n\nclass ScoreInput extends React.Component {\n  constructor(props){\n    super(props);\n    this.divClass = this.props.children.slice(0,3).toLowerCase()+(this.props.children.replace(/\\s/g, '')).slice(3);\n  }\n\n  render() {\n    return (\n      <Row className=\"score-row\">\n        <Col s={6}>\n          <div className=\"score-label\">\n            {this.props.children}:\n          </div>\n        </Col>\n        <Col s={4}>\n          <div className=\"profile-input score-input\">\n            <input defaultValue={this.props.inputValue} className=\"active\" type={this.props.isPassword || \"text\"} name={this.divClass} id={this.divClass} onChange={this.props.handleChange} />\n          </div>\n        </Col>\n      </Row>\n    );\n  };\n}\n\nexport default compose()(ScoreInput);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\n\nclass SelectInput extends React.Component {\n  constructor(props){\n    super(props);\n    this.divClass = this.props.children.charAt(0).toLowerCase()+(this.props.children.replace(/\\s/g, '')).slice(1);\n    this.locked = false;\n  }\n\n  inputValueReceived(){\n    if (this.props.inputValue){\n      console.log(this.props.inputValue);\n      if(!this.locked && document.getElementById(this.divClass)){\n        this.locked = true;\n        document.getElementById(this.divClass).value = this.props.inputValue;\n      }\n    }\n  }\n\n  render() {\n    if (this.props.inputValue){\n      this.inputValueReceived();\n    }\n\n    return (\n      <Row className=\"profile-row\">\n        <Col s={3}>\n          <div className=\"profile-label\">\n            {this.props.hideLabel ? (\n              <div></div>\n            ) : (\n              <div>{this.props.children}:</div>\n            )}\n          </div>\n        </Col>\n        {this.props.smallDiv ? (\n          <Col s={2}>\n            <div className=\"profile-input\">\n              <select className=\"browser-default\" name={this.divClass} id={this.divClass} onChange={this.props.handleChange}>\n                <option className=\"option-default\" key=\"0\" value=\"0\"></option>\n                {this.props.options.map((choice, index) => {\n                  return <option key={index+1} value={choice}>{choice}</option>;\n                })}\n              </select>\n            </div>\n          </Col>\n        ) : (\n          <Col s={5}>\n            <div className=\"profile-input\">\n              <select className=\"browser-default\" name={this.divClass} id={this.divClass} onChange={this.props.handleChange}>\n                <option className=\"option-default\" key=\"0\" value=\"0\"></option>\n                {this.props.options.map((choice, index) => {\n                  return <option key={index+1} value={choice}>{choice}</option>;\n                })}\n              </select>\n            </div>\n          </Col>\n        )}\n      </Row>\n    );\n  };\n}\n\nexport default compose()(SelectInput);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport firebase, {db} from '../../firebase';\nimport ProfileInput from './ProfileInput';\nimport CollegeInput from './CollegeInput';\nimport ScoreInput from './ScoreInput';\nimport { Redirect } from 'react-router-dom';\nimport SelectInput from './SelectInput';\nimport { text } from './../../resources/colleges.json'\n\nclass UserProfileScreen extends React.Component {\n  constructor(props){\n    super(props);\n\n    console.log(text);\n    this.collegesArray = text.split(/\\r?\\n/);\n    console.log(this.collegesArray);\n    this.value = null;\n    this.applyArray = {};\n    this.locked = false;\n    this.disabled = false;\n    this.enabled = true;\n    this.isPassword = \"password\";\n    this.validData = true;\n    this.collegeData = new Object();\n    this.collegeData = {\n      HarvardUniversity : {\n        satMath25: null,\n        satMath75: null,\n        satEBRW25: 730,\n        satEBRW75: 790,\n        actComposite25: 32,\n        actComposite75: 35\n      },\n      StonyBrookUniversity : {\n        satMath25: 620,\n        satMath75: 730,\n        satEBRW25: 590,\n        satEBRW75: 680,\n        actComposite25: 26,\n        actComposite75: 31\n      },\n      KalamazooCollege : {\n        satMath25: 580,\n        satMath75: 690,\n        satEBRW25: 600,\n        satEBRW75: 690,\n        actComposite25: 26,\n        actComposite75: 30\n      }\n    }\n    console.log(this.collegeData);\n  }\n  \n  state = {\n    classNumbers: [\"2020\",\"2021\",\"2022\",\"2023\",\"2024\",\"2025\",\"2026\",\"2027\",\"2028\",\"2029\",\"2030\",\"2031\"],\n    majorsList: [\"Accounting\",\"Architecture\",\"Art\",\"Biochemistry\",\"Biology\",\"Chemistry\",\"Computer Science\",\"Economics\",\"Engineering\",\"English\",\"Environmental Studies\",\"Graphic Design\",\"History\",\"Law\",\"Linguistics\",\"Mathematics\",\"Music\",\"Nursing\",\"Philosophy\",\"Physics\",\"Political Science\",\"Pre Med\",\"Psychology\",\"Religion\",\"Teaching\"],\n    states: [ 'AL', 'AK', 'AS', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FM', 'FL', 'GA', 'GU', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MH', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'MP', 'OH', 'OK', 'OR', 'PW', 'PA', 'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI', 'WY' ],\n    email: '',\n    password: '',\n    locked: false\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n    document.querySelector(\"#\"+target.id).classList.remove(\"invalid\");\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  componentDidMount(){\n  }\n\n  checkGPA(){\n    let tvalue = document.querySelector(\"#gpa\").value;\n    let fieldValid = true;\n    let value = 1;\n    if (tvalue){\n      if (tvalue < 0){\n        fieldValid = false;\n      }\n      if (tvalue > 5){\n        fieldValid = false;\n      }\n    }\n    else{\n      value = 0;\n    }\n    if (fieldValid === false){\n      document.querySelector(\"#gpa\").classList.add(\"invalid\");\n      this.validData = false;\n    }\n    return value;\n  }\n\n  checkACTScores(field){\n    let tvalue = document.querySelector(\"#\"+field).value;\n    let fieldValid = true;\n    let value = 1;\n    if (tvalue){\n      if (!Number.isInteger(parseFloat(tvalue))){\n        fieldValid = false;\n      }\n      if (tvalue < 0){\n        fieldValid = false;\n      }\n      if (tvalue > 40){\n        fieldValid = false;\n      }\n    }\n    else{\n      value = 0;\n    }\n    if (fieldValid === false){\n      document.querySelector(\"#\"+field).classList.add(\"invalid\");\n      this.validData = false;\n    }\n    return value;\n  }\n\n  checkSATScores(field){\n    let tvalue = document.querySelector(\"#\"+field).value;\n    let fieldValid = true;\n    let value = 1;\n    if (tvalue){\n      if (tvalue%10 != 0){\n        fieldValid = false;\n      }\n      if (tvalue < 0){\n        fieldValid = false;\n      }\n      if (tvalue > 800){\n        fieldValid = false;\n      }\n    }\n    else{\n      value = 0;\n    }\n    if (fieldValid === false){\n      document.querySelector(\"#\"+field).classList.add(\"invalid\");\n      this.validData = false;\n    }\n    return value;\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    this.validData = true;\n\n    // Check SAT and ACT Scores and GPA\n\n    this.checkSATScores(\"satLiterature\");\n    this.checkSATScores(\"satUSHistory\");\n    this.checkSATScores(\"satWorldHistory\");\n    this.checkSATScores(\"satChemistry\");\n    this.checkSATScores(\"satPhysics\");\n    this.checkSATScores(\"satEcologicalBiology\");\n    this.checkSATScores(\"satMolecularBiology\");\n    this.checkSATScores(\"satMathI\");\n    this.checkSATScores(\"satMathII\");\n\n\n    this.checkACTScores(\"actReading\");\n    this.checkACTScores(\"actScience\");\n    this.checkACTScores(\"actMath\");\n    this.checkACTScores(\"actLiterature\");\n\n    // Filled Data must be > 0 in order to evaluate decisions\n    let filledData = this.checkSATScores(\"satMath\")+\n                      this.checkSATScores(\"satEBRW\")+\n                      this.checkACTScores(\"actComposite\")+\n                      this.checkGPA();\n                      \n    // Check if any school decisions are the same.  If so, data invalid:\n    let collegesSelected = [];\n    for(let i=0; i<10; i++){\n      if (document.getElementById(\"school\"+i)){\n        if (document.getElementById(\"school\"+i).value === \"0\"){\n\n        }\n        else{\n          let current = document.getElementById(\"school\"+i).value;\n          collegesSelected.forEach((selected)=>{\n            if (current === selected){\n              this.validData = false;\n              document.getElementById(\"school\"+i).classList.add(\"invalid\");\n            }\n          })\n          collegesSelected.push(current);\n        }\n      }\n    }\n    console.log(collegesSelected);\n\n    if (this.validData){\n      let scoresChanged = false;\n\n      let questionableColleges = {};\n      let approvedColleges = {};\n      let decisionsRef = db.collection('QuestionableDecisions');\n      let approvedRef = db.collection('ApprovedDecisions');\n      let collegesRef = db.collection('Colleges');\n      \n      let tempAccount = this.props.profileInfo[\"Accounts\"];\n      let tempID = tempAccount[Object.keys(tempAccount)[0]].userID;\n\n      let tempQuestionable = this.props.profileInfo[\"QuestionableDecisions\"];\n      let tempQInfo = tempQuestionable[Object.keys(tempQuestionable)[0]][tempID];\n\n      let profileID = Object.keys(this.props.profileInfo[\"studentProfiles\"])[0];\n      let t1 = this.props.profileInfo[\"studentProfiles\"];\n      let t2 = t1[Object.keys(t1)[0]];\n      console.log(t2);\n\n\n      // First, check if any scores were changed.  If so, all decisions must be re-evaluated.\n      if (document.getElementById(\"actComposite\").value != t2.act_composite\n        || document.getElementById(\"satMath\").value != t2.sat_math\n        || document.getElementById(\"satEBRW\").value != t2.sat_ebrw\n        || document.getElementById(\"gpa\").value != t2.gpa){\n          scoresChanged = true;\n          console.log(\"Scores Changed\");\n      }\n\n      // Remove user from all colleges they previously applied to (and was approved)\n        Object.keys(t2.applied_colleges).forEach((college) => {\n          let approvedSchoolName = college;\n          approvedRef.doc(approvedSchoolName).update({\n            [tempID]: firebase.firestore.FieldValue.delete(),\n          })\n          .then(function() {\n            console.log(\"Deleting approved decisions...\");\n          })\n          .catch(function(error) {\n            console.log(\"Error getting documents: \");\n          });\n        })\n\n\n      console.log(\"Valid Data: \",this.validData);\n      if (this.validData && filledData > 0){\n        for(let i=0; i<20; i++){\n          if (document.querySelector(\"#school\"+i)){\n            if (document.getElementById(\"decision\"+i)){\n\n              // No College Selected\n              if (document.getElementById(\"school\"+i).value === \"0\"){\n                document.querySelector(\"#questionable\"+i).innerHTML = \"No evaluation.\"\n              }\n\n              // College Selected\n              else{\n                let schoolName = document.querySelector(\"#school\"+i).value;\n                let schoolDecision = document.querySelector(\"#decision\"+i).value;\n                let parsedSchoolName = schoolName.replace(/\\s/g, '');\n                let sum = 0;\n                console.log(schoolDecision);\n\n                  db.collection(\"ScrapedCollegeData\").where(\"name\",\"==\",schoolName)\n                  .get()\n                  .then(function(querySnapshot){\n                    if (querySnapshot.size == 0){\n                      console.log(\"Not Found\");\n                      sum = 4\n                    }\n                    else{\n                      console.log(\"Found\")\n\n\n\n                      // Student says they were accepted\n                      //  Acceptance Criteria: At least one comparable field, all comparable fields > 25% cutoffs\n                      //  There are four fields to compare: SAT Math, SAT EBRW, GPA, ACT Composite.\n                      //  Each comparison will return a value.\n                      // \n                      //  Possible Return Values:\n                      //      No comparable data: 1.1\n                      //      Data above 25% threshold: 1\n                      //      Data below 25% threshold: 0\n                      // \n                      //  All return values will be summed together.\n                      // \n                      //  Possible Outcomes:\n                      //      (No evaluation) ALL fields have no comparable data: Sum has a decimal place of .4\n                      //      (Questionable Acceptance) ONE field is not above the 25% threshold: Sum is < 4.\n                      //      (Approved Acceptance) All comparable fields are above the 25% threshold: Sum is >= 4,\n                      //                             but decimal place is < .4\n                      // \n                      if (schoolDecision === \"accepted\"){\n                        sum = 0;\n                        querySnapshot.forEach(function(doc) {\n                          let temp = doc.data();\n                          let userFields = {\n                            sat_Math: document.getElementById(\"satMath\").value,\n                            sat_Read: document.getElementById(\"satEBRW\").value,\n                            act_ENG: document.getElementById(\"actComposite\").value\n                          }\n                          let fieldNames = [\"sat_Math\",\"sat_Read\",\"act_ENG\"];\n\n                          fieldNames.forEach((field) => {\n                            if (userFields[field]){\n                              console.log(temp);\n                              console.log(userFields[field]+\"___________\"+parseInt(temp[field+\"25\"]))\n                      \n                              // Check if school has this field.\n                              if(temp[field+\"25\"]){\n                                if (userFields[field] < parseInt(temp[field+\"25\"])){\n                                  //Data is questionable\n                                  console.log(\"Hello\");\n                                }\n                                else{\n                                  // Data is good.\n                                  sum = sum+1\n                                }\n                              }\n                              else{\n                                // Data not calculable\n                                sum = sum+1.1\n                              }\n                            }\n                            else{\n                              // Data not calculable\n                              sum = sum+1.1\n                            }\n                          })\n                          sum = sum+1.1\n                        })\n\n                        let value = sum;\n                        console.log(value);\n                        console.log(Math.round(value%1 * 10) / 10);\n                        // No data can be compared\n                        if (Math.round(value%1 * 10) / 10 === .4){\n                          document.querySelector(\"#questionable\"+i).innerHTML = \"No evaluation.\"\n                        }\n                        // Data is questionable, at least one field was below criteria\n                        else if (value < 4){\n                          document.querySelector(\"#questionable\"+i).innerHTML = \"Questionable.\"\n                          // If scores weren't changed, check if this decision was changed before adding it to the list.\n                          if (!scoresChanged){\n                            if (tempQInfo){\n                              if (!tempQInfo[\"colleges\"][parsedSchoolName]\n                              && Object.keys(t2.applied_colleges)[i] === document.getElementById(\"school\"+i).value\n                              && t2.applied_colleges[schoolName] === document.getElementById(\"decision\"+i).value){\n                                console.log(\"Nothing was changed, and decision was already approved.\");\n                                document.querySelector(\"#questionable\"+i).innerHTML = \"Questionable, but already approved.\";\n                                approvedColleges[schoolName] = \"accepted\";\n                              }\n                              else{\n                                // Either the decision was not yet approved or the decision for that school was changed\n                                // Check if the decision changed.  If not, keep current reviewed variable.  If it did, set reviewed to false.\n                                if (Object.keys(t2.applied_colleges)[i] === document.getElementById(\"school\"+i).value\n                                && t2.applied_colleges[schoolName] === document.getElementById(\"decision\"+i).value){\n                                  questionableColleges[parsedSchoolName] = {\n                                    name: schoolName,\n                                    decision: \"accepted\",\n                                    reviewed: tempQInfo[\"colleges\"][parsedSchoolName][\"reviewed\"]\n                                  }\n                                }\n                                else{\n                                  questionableColleges[parsedSchoolName] = {\n                                    name: schoolName,\n                                    decision: \"accepted\",\n                                    reviewed: false\n                                  }\n                                }\n                                \n                              }\n                            }\n                            else{\n                              questionableColleges[parsedSchoolName] = {\n                                name: schoolName,\n                                decision: \"accepted\",\n                                reviewed: false\n                              }\n                            }\n                          }\n                          else{\n                            // Scores were changed, add to object of colleges that were questionable.  Reviewed is automatically false.\n                            // questionableColleges[parsedSchoolName] = \"accepted\";\n                            questionableColleges[parsedSchoolName] = {\n                              name: schoolName,\n                              decision: \"accepted\",\n                              reviewed: false\n                            }\n                          }\n                        }\n                        // Data is good.  All comparable fields were within acceptance criteria.\n                        else{\n                          document.querySelector(\"#questionable\"+i).innerHTML = \"Approved.\"\n                          approvedColleges[schoolName] = \"accepted\";\n                        }\n                      }\n\n\n\n                      //Student says they were rejected.\n                      //  Rejection Criteria: At least one comparable field, all fields < 75% grade cutoff\n                      //  There are four fields to compare: SAT Math, SAT EBRW, GPA, ACT Composite.\n                      //  Each comparison will return a value.\n                      // \n                      //  Possible Return Values:\n                      //      No comparable data: 1.1\n                      //      Data above 75% threshold: 2\n                      //      Data above 25% threshold: 1\n                      //      Data below 25% threshold: -10\n                      // \n                      //  All return values will be summed together.\n                      // \n                      //  Possible Outcomes:\n                      //      (No evaluation) ALL fields have no comparable data: Sum has a decimal place of .4\n                      //      (Questionable Rejection) All comparable fields were above the 25% threshold\n                      //                               and at least one field was above the 75% threshold: Sum is >= 5\n                      //      (Approved Rejection 1) All comparable fields were above the 25% threshold,\n                      //                              but none were above 75%: Sum is < 5\n                      //      (Approved Rejection 2) At least one comparable field was below the 25% threshold:\n                      //                            Sum is < 5 (despite any exceptional grades)\n                      // \n                      else if (schoolDecision === \"denied\"){\n                        sum = 0;\n                        querySnapshot.forEach(function(doc) {\n                          let temp = doc.data();\n                          let userFields = {\n                            sat_Math: document.getElementById(\"satMath\").value,\n                            sat_Read: document.getElementById(\"satEBRW\").value,\n                            act_ENG: document.getElementById(\"actComposite\").value\n                          }\n                          let fieldNames = [\"sat_Math\",\"sat_Read\",\"act_ENG\"];\n\n                          fieldNames.forEach((field) => {\n                            if (userFields[field]){\n                              // Check if school has these fields.  If not, add one and disregard.\n                              if(temp[field+\"25\"] && temp[field+\"75\"]){\n                                if (userFields[field] >= parseInt(temp[field+\"25\"])){\n                                  if(userFields[field] >= parseInt(temp[field+\"75\"])){\n                                    // Surpasses expecations (at least one is necessary to reach a sum of 5)\n                                    sum = sum+2;\n                                  }\n                                  else{\n                                    // Data is good\n                                    sum = sum+1\n                                  }\n                                }\n                                else{\n                                  // Data meets rejection criteria (By subtracting 10, no amount of exceptional scores can bring the sum back up to 5)\n                                  sum = sum-10\n                                }\n                              }\n                            }\n                            else{\n                              // Not calculable\n                              sum = sum + 1.1\n                            }\n                          })\n                          sum = sum+1.1\n                        })\n\n                        let value = sum;\n                        console.log(value);\n\n                        // No data can be compared\n                        if (Math.round(value%1 * 10) / 10 === .4){\n                          document.querySelector(\"#questionable\"+i).innerHTML = \"No evaluation.\"\n                        }\n\n                        // Data is questionable.  All comparable fields were within acceptance criteria, and 1 was above 75% threshold.\n                        else if (value >= 5){\n                          this.setState({[parsedSchoolName]: \"questionable\"});\n                          document.querySelector(\"#questionable\"+i).innerHTML = \"Questionable.\"\n\n                          // If scores weren't changed, check if this decisions was changed before adding it to the list.\n                          if (!scoresChanged){\n                            if (tempQInfo){\n                              if (!tempQInfo[\"colleges\"][parsedSchoolName]\n                              && Object.keys(t2.applied_colleges)[i] === document.getElementById(\"school\"+i).value\n                              && t2.applied_colleges[schoolName] === document.getElementById(\"decision\"+i).value){\n                                console.log(\"Nothing was changed, and decision was already approved.\");\n                                document.querySelector(\"#questionable\"+i).innerHTML = \"Questionable, but already approved.\";\n                                approvedColleges[schoolName] = \"denied\";\n                              }\n                              else{\n                                // Either the decision was not yet approved or the decision for that school was changed\n                                // Check if the decision changed.  If not, keep current reviewed variable.  If it did, set reviewed to false.\n                                if (Object.keys(t2.applied_colleges)[i] === document.getElementById(\"school\"+i).value\n                                && t2.applied_colleges[schoolName] === document.getElementById(\"decision\"+i).value){\n                                  questionableColleges[parsedSchoolName] = {\n                                    name: schoolName,\n                                    decision: \"denied\",\n                                    reviewed: tempQInfo[\"colleges\"][parsedSchoolName][\"reviewed\"]\n                                  }\n                                }\n                                else{\n                                  questionableColleges[parsedSchoolName] = {\n                                    name: schoolName,\n                                    decision: \"denied\",\n                                    reviewed: false\n                                  }\n                                }\n                                \n                              }\n                            }\n                            else{\n                              questionableColleges[parsedSchoolName] = {\n                                name: schoolName,\n                                decision: \"accepted\",\n                                reviewed: false\n                              }\n                            }\n                          }\n                          else{\n                            // Scores were changed, add to object of colleges that were questionable.\n                            questionableColleges[parsedSchoolName] = {\n                              name: schoolName,\n                              decision: \"denied\",\n                              reviewed: false\n                            }\n                          }\n                        }\n\n                        // Data is good.  At least one comparable field met rejection criteria.\n                        else{\n                          document.querySelector(\"#questionable\"+i).innerHTML = \"Approved.\"\n                          approvedColleges[schoolName] = \"denied\";\n                        }\n                      }\n\n\n\n\n\n\n                      // Student is pending, deferred, withdrawn or on waitlist.\n                      else{\n                        document.querySelector(\"#questionable\"+i).innerHTML = \"No Acceptance Decision Made.\"\n                        approvedColleges[schoolName] = schoolDecision;\n                      }\n\n                      console.log(questionableColleges);\n                      console.log(approvedColleges);\n\n\n                      // Update all approved colleges onto the DB along with relevant info about the student\n                      Object.keys(approvedColleges).forEach((college)=>{\n                        approvedRef.doc(college).set({\n                          [tempID]: {\n                            decision: approvedColleges[college],\n                            gpa: parseFloat(document.getElementById(\"gpa\").value),\n                            sat_math: parseInt(document.getElementById(\"satMath\").value),\n                            sat_ebrw: parseInt(document.getElementById(\"satEBRW\").value),\n                            act_composite: parseInt(document.getElementById(\"actComposite\").value),\n                          }}, { merge: true}\n                        )\n                        .then(function() {\n                          console.log(\"Document successfully written!\");\n                        })\n                        .catch(function(error) {\n                            console.error(\"Error writing document: \", error);\n                        });\n                      })\n\n                      // Update all questionable colleges onto the DB along with relevant info about the student\n                      decisionsRef\n                      .get()\n                      .then(function(querySnapshot) {\n                          querySnapshot.forEach(function(doc) {\n                              let temp = doc.data();\n                              console.log(temp);\n                              db.collection('QuestionableDecisions').doc(doc.id).update({\n                                [tempID]: {\n                                  colleges: questionableColleges,\n                                  gpa: parseFloat(document.getElementById(\"gpa\").value),\n                                  sat_math: parseInt(document.getElementById(\"satMath\").value),\n                                  sat_ebrw: parseInt(document.getElementById(\"satEBRW\").value),\n                                  act_composite: parseInt(document.getElementById(\"actComposite\").value),\n                                }\n                              })\n                          });\n                      })\n                      .catch(function(error) {\n                          console.log(\"Error getting documents: \", error);\n                      });\n                    }\n                  })\n                }\n              }\n\n              // Either college or Decision was not selected.\n              else{\n                document.querySelector(\"#questionable\"+i).innerHTML = \"No evaluation.\"\n              }\n            }\n          }\n      }\n      else{\n        if (filledData == 0){\n          alert(\"Not enough Data\");\n        }\n        else{\n          alert(\"Invalid Data.\");\n        }\n      }\n\n\n      // Construct array of applied colleges to save to the profile\n\n      let appliedColleges = {};\n      for (let i=0;i<10;i++){\n        if(document.getElementById(\"school\"+i)){\n          if(document.getElementById(\"school\"+i).value !=0){\n            appliedColleges[document.getElementById(\"school\"+i).value] = document.getElementById(\"decision\"+i).value;\n          }\n        }\n        else{\n\n        }\n      }\n\n      console.log(appliedColleges);\n\n\n\n\n      // Finally, Update profile\n\n      let temp2Account = tempAccount[(Object.keys(tempAccount)[0])];\n      let tempProfile = {\n        userid: temp2Account.userID,\n        password: temp2Account.password,\n        email: temp2Account.email,\n        applied_colleges: appliedColleges,\n        act_composite: (document.getElementById(\"actComposite\").value) ? (parseInt(document.getElementById(\"actComposite\").value)) : (null),\n        act_english: (document.getElementById(\"actLiterature\").value) ? (parseInt(document.getElementById(\"actLiterature\").value)) : (null),\n        act_math: (document.getElementById(\"actMath\").value) ? (parseInt(document.getElementById(\"actMath\").value)) : (null),\n        act_reading: (document.getElementById(\"actReading\").value) ? (parseInt(document.getElementById(\"actReading\").value)) : (null),\n        act_science: (document.getElementById(\"actScience\").value) ? (parseInt(document.getElementById(\"actScience\").value)) : (null),\n        college_class: (document.getElementById(\"classOf\").value) ? (parseInt(document.getElementById(\"classOf\").value)) : (null),\n        gpa: (document.getElementById(\"gpa\").value) ? (parseFloat(document.getElementById(\"gpa\").value)) : (null),\n        high_school_city: (document.getElementById(\"highSchoolCity\").value) ? (document.getElementById(\"highSchoolCity\").value) : (null),\n        high_school_name: (document.getElementById(\"highSchool\").value) ? (document.getElementById(\"highSchool\").value) : (null),\n        high_school_state: (document.getElementById(\"highSchoolState\").value) ? (document.getElementById(\"highSchoolState\").value) : (null),\n        major_1: (document.getElementById(\"majors\").value) ? (document.getElementById(\"majors\").value) : (null),\n        major_2: (document.getElementById(\"major2\").value) ? (document.getElementById(\"major2\").value) : (null),\n        num_ap_passed: (document.getElementById(\"numberofAPsPassed\").value) ? (parseInt(document.getElementById(\"numberofAPsPassed\").value)) : (null),\n        residence_state: (document.getElementById(\"residenceState\").value) ? (document.getElementById(\"residenceState\").value) : (null),\n        sat_chemistry:(document.getElementById(\"satChemistry\").value) ? (parseInt(document.getElementById(\"satChemistry\").value)) : (null),\n        sat_ebrw:(document.getElementById(\"satEBRW\").value) ? (parseInt(document.getElementById(\"satEBRW\").value)) : (null),\n        sat_eco_bio:(document.getElementById(\"satEcologicalBiology\").value) ? (parseInt(document.getElementById(\"satEcologicalBiology\").value)) : (null),\n        sat_literature:(document.getElementById(\"satLiterature\").value) ? (parseInt(document.getElementById(\"satLiterature\").value)) : (null),\n        sat_math:(document.getElementById(\"satMath\").value) ? (parseInt(document.getElementById(\"satMath\").value)) : (null),\n        sat_math_i:(document.getElementById(\"satMathI\").value) ? (parseInt(document.getElementById(\"satMathI\").value)) : (null),\n        sat_math_ii:(document.getElementById(\"satMathII\").value) ? (parseInt(document.getElementById(\"satMathII\").value)) : (null),\n        sat_mol_bio:(document.getElementById(\"satMolecularBiology\").value) ? (parseInt(document.getElementById(\"satMolecularBiology\").value)) : (null),\n        sat_physics: (document.getElementById(\"satPhysics\").value) ? (parseInt(document.getElementById(\"satPhysics\").value)) : (null),\n        sat_us_hist: (document.getElementById(\"satUSHistory\").value) ? (parseInt(document.getElementById(\"satUSHistory\").value)) : (null),\n        sat_world_hist: (document.getElementById(\"satWorldHistory\").value) ? (parseInt(document.getElementById(\"satWorldHistory\").value)) : (null),\n      };\n      console.log(tempProfile);\n      db.collection('studentProfiles').doc(profileID).update({\n        userid: temp2Account.userID,\n        password: temp2Account.password,\n        email: temp2Account.email,\n        applied_colleges: appliedColleges,\n        act_composite: (document.getElementById(\"actComposite\").value) ? (parseInt(document.getElementById(\"actComposite\").value)) : (null),\n        act_english: (document.getElementById(\"actLiterature\").value) ? (parseInt(document.getElementById(\"actLiterature\").value)) : (null),\n        act_math: (document.getElementById(\"actMath\").value) ? (parseInt(document.getElementById(\"actMath\").value)) : (null),\n        act_reading: (document.getElementById(\"actReading\").value) ? (parseInt(document.getElementById(\"actReading\").value)) : (null),\n        act_science: (document.getElementById(\"actScience\").value) ? (parseInt(document.getElementById(\"actScience\").value)) : (null),\n        college_class: (document.getElementById(\"classOf\").value) ? (parseInt(document.getElementById(\"classOf\").value)) : (null),\n        gpa: (document.getElementById(\"gpa\").value) ? (parseFloat(document.getElementById(\"gpa\").value)) : (null),\n        high_school_city: (document.getElementById(\"highSchoolCity\").value) ? (document.getElementById(\"highSchoolCity\").value) : (null),\n        high_school_name: (document.getElementById(\"highSchool\").value) ? (document.getElementById(\"highSchool\").value) : (null),\n        high_school_state: (document.getElementById(\"highSchoolState\").value) ? (document.getElementById(\"highSchoolState\").value) : (null),\n        major_1: (document.getElementById(\"majors\").value) ? (document.getElementById(\"majors\").value) : (null),\n        major_2: (document.getElementById(\"major2\").value) ? (document.getElementById(\"major2\").value) : (null),\n        num_ap_passed: (document.getElementById(\"numberofAPsPassed\").value) ? (parseInt(document.getElementById(\"numberofAPsPassed\").value)) : (null),\n        residence_state: (document.getElementById(\"residenceState\").value) ? (document.getElementById(\"residenceState\").value) : (null),\n        sat_chemistry:(document.getElementById(\"satChemistry\").value) ? (parseInt(document.getElementById(\"satChemistry\").value)) : (null),\n        sat_ebrw:(document.getElementById(\"satEBRW\").value) ? (parseInt(document.getElementById(\"satEBRW\").value)) : (null),\n        sat_eco_bio:(document.getElementById(\"satEcologicalBiology\").value) ? (parseInt(document.getElementById(\"satEcologicalBiology\").value)) : (null),\n        sat_literature:(document.getElementById(\"satLiterature\").value) ? (parseInt(document.getElementById(\"satLiterature\").value)) : (null),\n        sat_math:(document.getElementById(\"satMath\").value) ? (parseInt(document.getElementById(\"satMath\").value)) : (null),\n        sat_math_i:(document.getElementById(\"satMathI\").value) ? (parseInt(document.getElementById(\"satMathI\").value)) : (null),\n        sat_math_ii:(document.getElementById(\"satMathII\").value) ? (parseInt(document.getElementById(\"satMathII\").value)) : (null),\n        sat_mol_bio:(document.getElementById(\"satMolecularBiology\").value) ? (parseInt(document.getElementById(\"satMolecularBiology\").value)) : (null),\n        sat_physics: (document.getElementById(\"satPhysics\").value) ? (parseInt(document.getElementById(\"satPhysics\").value)) : (null),\n        sat_us_hist: (document.getElementById(\"satUSHistory\").value) ? (parseInt(document.getElementById(\"satUSHistory\").value)) : (null),\n        sat_world_hist: (document.getElementById(\"satWorldHistory\").value) ? (parseInt(document.getElementById(\"satWorldHistory\").value)) : (null),\n      });\n      this.forceUpdate();\n    }\n    else{\n      alert(\"Invalid Data.  Unable to Save Changes\");\n    }\n  }\n\n\n  removeCollege = (e) => {\n    \n  }\n\n  addCollege = (e) => {\n\n  }\n\n  updateState(field,value){\n    this.setState({field,value});\n    console.log(this.state);\n  }\n\n  addProfile(temp2Account){\n    // Locking here prevents multiple renders from triggering student profile generation\n    if(!this.state.locked){\n      this.setState({locked:true});\n      db.collection('studentProfiles').add({\n        userid: temp2Account.userID,\n        password: temp2Account.password,\n        email: temp2Account.email,\n        applied_colleges: {},\n        act_composite: null,\n        act_english: null,\n        act_math: null,\n        act_reading: null,\n        act_science: null,\n        college_class: null,\n        gpa: null,\n        high_school_city: null,\n        high_school_name: null,\n        high_school_state: null,\n        major_1: null,\n        major_2: null,\n        num_ap_passed: null,\n        residence_state:null,\n        sat_chemistry:null,\n        sat_ebrw:null,\n        sat_eco_bio:null,\n        sat_literature:null,\n        sat_math:null,\n        sat_math_i:null,\n        sat_math_ii:null,\n        sat_mol_bio:null,\n        sat_physics: null,\n        sat_us_hist: null,\n        sat_world_hist: null\n      })\n      console.log(\"Student Profile Succesfully Created\");\n    }\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    let acc = this.props.location.info.accountInfo;\n    console.log(acc);\n    let acc2 = acc[(Object.keys(acc)[0])];\n    let acc3 = acc2[(Object.keys(acc2)[0])];\n\n    const profileInfo = this.props.profileInfo;\n    let temp = profileInfo[\"studentProfiles\"];\n    let tempAccount = profileInfo[\"Accounts\"];\n    let temp2 = new Object();\n\n    temp2 = {\n      userid: null,\n      password: null,\n      email: null,\n      residence_state: null,\n      high_school_name: null,\n      high_school_city: null,\n      high_school_state: null,\n      gpa: null,\n      college_class: null,\n      major_1: null,\n      major_2: null,\n      sat_math: null,\n      sat_ebrw: null,\n      act_english: null,\n      act_math: null,\n      act_reading: null,\n      act_science: null,\n      act_composite: null,\n      sat_literature: null,\n      sat_us_hist: null,\n      sat_world_hist: null,\n      sat_math_i: null,\n      sat_math_ii: null,\n      sat_eco_bio: null,\n      sat_mol_bio: null,\n      sat_chemistry: null,\n      sat_physics: null,\n      num_ap_passed: null,\n      applied_colleges: null\n    }\n    let temp2Account = new Object();\n    temp2Account = {\n      email: null,\n      firstName: null,\n      lastName: null,\n      password: null,\n      userID: null\n    }\n    if(temp){\n      temp2 = temp[(Object.keys(temp)[0])];\n    }\n    console.log(temp2);\n    if(tempAccount){\n      temp2Account = tempAccount[(Object.keys(tempAccount)[0])];\n\n      if(!temp){\n        db.collection('studentProfiles').where(\"userid\",\"==\",temp2Account.userID)\n        .get()\n        .then((querySnapshot) => {\n          if (querySnapshot.size == 0){\n            // this.addProfile(temp2Account);\n          }\n        });\n      }\n    }\n\n    return (\n      <div className=\"outlet profile-container\">\n        <form onSubmit={this.handleSubmit} className=\"profile-form white\">\n          <h5 className=\"profile-header-text\">Edit Profile</h5>\n            {/* General Information */}\n\n            <ProfileInput\n              handleChange = {this.handleChange.bind(this)}\n              enabled={this.disabled}\n              inputValue={temp2Account.userID}>User ID</ProfileInput>\n            <ProfileInput\n              handleChange = {this.handleChange.bind(this)}\n              enabled={this.enabled}\n              inputValue={[temp2Account.firstName]+\" \"+[temp2Account.lastname]}>Display Name</ProfileInput>\n            <ProfileInput\n              handleChange = {this.handleChange.bind(this)}\n              enabled={this.enabled}\n              inputValue={temp2Account.email}>Email</ProfileInput>\n            <ProfileInput\n              handleChange = {this.handleChange.bind(this)}\n              enabled={this.enabled}\n              isPassword={this.isPassword}>New Password</ProfileInput>\n            <ProfileInput\n              handleChange = {this.handleChange.bind(this)}\n              enabled={this.enabled}\n              isPassword={this.isPassword}>Confirm New Password</ProfileInput>\n            <ProfileInput\n              handleChange = {this.handleChange.bind(this)}\n              enabled={this.enabled}\n              isPassword={this.isPassword}>Current Password</ProfileInput>\n            <ProfileInput\n              handleChange = {this.handleChange.bind(this)}\n              enabled={this.enabled}\n              inputValue={temp2.high_school_name}>High School</ProfileInput>\n            <ProfileInput\n              handleChange = {this.handleChange.bind(this)}\n              enabled={this.enabled}\n              inputValue={temp2.high_school_city}>High School City</ProfileInput>\n\n            <SelectInput\n              inputValue = {temp2.high_school_state}\n              updateState = {this.updateState.bind(this)}\n              handleChange = {this.handleChange.bind(this)}\n              options = {this.state.states}\n              smallDiv = {true}\n            >High School State</SelectInput>\n\n            <SelectInput\n              inputValue = {temp2.residence_state}\n              updateState = {this.updateState.bind(this)}\n              handleChange = {this.handleChange.bind(this)}\n              options = {this.state.states}\n              smallDiv = {true}\n            >Residence State</SelectInput>\n\n            <SelectInput\n              inputValue = {temp2.major_1}\n              updateState = {this.updateState.bind(this)}\n              handleChange = {this.handleChange.bind(this)}\n              options = {this.state.majorsList}\n            >Majors</SelectInput>\n\n            <SelectInput\n              inputValue = {temp2.major_2}\n              updateState = {this.updateState.bind(this)}\n              handleChange = {this.handleChange.bind(this)}\n              options = {this.state.majorsList}\n              hideLabel = {true}\n            >Major 2</SelectInput>\n\n            {/* Academic Statistics */}\n            <div className=\"section\">\n              <Row className=\"profile-row\">\n                <Col>\n                  <div className=\"profile-label\">\n                    Academic Statistics:\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"score-row\">\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.gpa}>GPA</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.num_ap_passed}>Number of APs Passed</ScoreInput>\n                </Col>\n              </Row>\n            </div>\n\n            {/* SAT Scores */}\n            <div className=\"section\">\n              <Row className=\"profile-row\">\n                <Col>\n                  <div className=\"profile-label\">\n                    SAT Scores:\n                  </div>\n                </Col>\n              </Row>\n\n              <Row className=\"score-row\">\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_math}>SAT Math</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_ebrw}>SAT EBRW</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_literature}>SAT Literature</ScoreInput>\n                </Col>\n              </Row>\n\n              <Row className=\"score-row\">\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_us_hist}>SAT US History</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_world_hist}>SAT World History</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_chemistry}>SAT Chemistry</ScoreInput>\n                </Col>\n              </Row>\n\n              <Row className=\"score-row\">\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_physics}>SAT Physics</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_eco_bio}>SAT Ecological Biology</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_mol_bio}>SAT Molecular Biology</ScoreInput>\n                </Col>\n              </Row>\n\n              <Row className=\"score-row\">\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_math_i}>SAT Math I</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.sat_math_ii}>SAT Math II</ScoreInput>\n                </Col>\n                <Col s={4}>\n                </Col>\n              </Row>\n            </div>\n\n            {/* Act Scores */}\n            <div className=\"section\">\n              <Row className=\"profile-row\">\n                <Col>\n                  <div className=\"profile-label\">\n                    ACT Scores:\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"score-row\">\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.act_composite}>ACT Composite</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.act_reading}>ACT Reading</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.act_science}>ACT Science</ScoreInput>\n                </Col>\n              </Row>\n              <Row className=\"score-row\">\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.act_math}>ACT Math</ScoreInput>\n                </Col>\n                <Col s={4}>\n                  <ScoreInput\n                  handleChange = {this.handleChange.bind(this)}\n                  inputValue={temp2.act_english}>ACT Literature</ScoreInput>\n                </Col>\n                <Col s={4}>\n                </Col>\n              </Row>\n            </div>\n            \n\n            {/* College Applications */}\n\n            <Row className=\"profile-row\">\n              <Col>\n                <div className=\"profile-label\">\n                  Applied Colleges:\n                </div>\n              </Col>\n            </Row>\n\n            {temp2.applied_colleges ? (\n              Object.entries(temp2.applied_colleges).map((decision,index) => {\n                return <CollegeInput\n                      options = {this.collegesArray}\n                      inputValue = {decision}\n                      updateState = {this.updateState.bind(this)}\n                      handleChange = {this.handleChange.bind(this)}\n                      removeCollege = {this.removeCollege.bind(this)}\n                      optionIndex = {index}/>\n              })\n              ) : (\n                <div></div>\n              )}\n            <CollegeInput\n            options = {this.collegesArray}\n            updateState = {this.updateState.bind(this)}\n            handleChange = {this.handleChange.bind(this)}\n            removeCollege = {this.removeCollege.bind(this)}\n            optionIndex = {5}/>\n\n\n            <SelectInput\n            inputValue = {temp2.college_class}\n            updateState = {this.updateState.bind(this)}\n            handleChange = {this.handleChange.bind(this)}\n            options = {this.state.classNumbers}\n            smallDiv = {true}\n            >Class Of</SelectInput>\n            {/* <Row className=\"profile-row\">\n              <Col s={2}>\n                <div className=\"profile-label\">\n                  Class Of: \n                </div>\n              </Col>\n              <Col s={2}>\n                <div className=\"profile-input\">\n                  <select className=\"active browser-default\" name=\"collegeClass\" id=\"collegeClass\" onChange={this.props.handleChange}>\n                    <option value=\"0\"></option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2023\">2023</option>\n                    <option value=\"2024\">2024</option>\n                    <option value=\"2025\">2025</option>\n                    <option value=\"2026\">2026</option>\n                    <option value=\"2027\">2027</option>\n                  </select>\n                </div>\n              </Col>\n            </Row> */}\n\n            <div className=\"input-field\">\n              <Row>\n                <Col s={4}>\n                  <button type=\"submit\" className=\"btn-large green lighten-1 z-depth-0 profile-button\">Save Changes</button>\n                </Col>\n              </Row>\n            </div>\n        </form>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      profileInfo: state.firestore.data,\n      auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect(props => {\n      if (!props.auth.uid) \n      {\n          return [];\n      }\n      else\n      {\n          let acc = props.location.info.accountInfo;\n          let acc2 = acc[(Object.keys(acc)[0])];\n          let acc3 = acc2[(Object.keys(acc2)[0])];\n          console.log(acc3.userID);\n          return [\n          { collection: 'studentProfiles',\n              where: ['userid', '==', acc3.userID]\n          }, {collection: 'QuestionableDecisions'}];\n      }\n  }),\n)(UserProfileScreen);\n\n\n// Extra Info\n      // if (scoresChanged){\n      //   // Remove ALL decisions from this user from Questionable Decisions Docs.\n      //   console.log(tempID);\n      //   decisionsRef\n      //   .get()\n      //   .then(function(querySnapshot) {\n      //       querySnapshot.forEach(function(doc) {\n      //           // doc.data() is never undefined for query doc snapshots\n      //           let temp = doc.data();\n      //           console.log(temp);\n      //           // First remove Student from all decision lists\n\n      //           Object.keys(temp).forEach((student)=>{\n      //             if (student === tempID){\n      //               console.log(\"Found\");\n      //               db.collection('QuestionableDecisions').doc(doc.id).update({\n      //                 [student]: {}\n      //               })\n      //             }\n      //           });\n      //       });\n      //   })\n      //   .catch(function(error) {\n      //       console.log(\"Error getting documents: \", error);\n      //   });\n      // }\n\n\n      // Remove decisions from this user from all colleges they applied to.\n      // collegesRef.where(\"Name\",\"==\",\"test\")\n      // .get()\n      // .then(function(querySnapshot) {\n      //     querySnapshot.forEach(function(doc) {\n      //         // doc.data() is never undefined for query doc snapshots\n      //         console.log(doc.id, \" => \", doc.data());\n      //         let temp = doc.data().list;\n      //         console.log(temp);\n      //         // First remove Student from all college decision lists\n\n\n      //         // db.collection('Colleges').doc(doc.id).update({\n      //         //   list: {}\n      //         // });\n\n      //         // Then check if they should be added back to these college decision lists\n\n      //     });\n      // })\n      // .catch(function(error) {\n      //     console.log(\"Error getting documents: \", error);\n      // });\n\n      // Then check if they should be added back to these college decision lists\n\n      // handleReview = (e) => {\n      //   e.preventDefault();\n      //   console.log(this.state);\n      //   console.log(this.value);\n      //   this.validData = true;\n    \n      //   // Check SAT and ACT Scores and GPA\n    \n      //   this.checkSATScores(\"satLiterature\");\n      //   this.checkSATScores(\"satUSHistory\");\n      //   this.checkSATScores(\"satWorldHistory\");\n      //   this.checkSATScores(\"satChemistry\");\n      //   this.checkSATScores(\"satPhysics\");\n      //   this.checkSATScores(\"satEcologicalBiology\");\n      //   this.checkSATScores(\"satMolecularBiology\");\n      //   this.checkSATScores(\"satMathI\");\n      //   this.checkSATScores(\"satMathII\");\n    \n    \n      //   this.checkACTScores(\"actReading\");\n      //   this.checkACTScores(\"actScience\");\n      //   this.checkACTScores(\"actMath\");\n      //   this.checkACTScores(\"actLiterature\");\n    \n      //   this.checkGPA();\n    \n      //   let filledData = this.checkSATScores(\"satMath\")+\n      //                     this.checkSATScores(\"satEBRW\")+\n      //                     this.checkACTScores(\"actComposite\");\n    \n      //   // Check at least one is filled and that all data is valid.\n      //   console.log(\"Valid Data: \",this.validData);\n      //   if (this.validData && filledData > 0){\n      //     for(let i=0; i<10; i++){\n      //       if (document.querySelector(\"#school\"+i)){\n      //         if (this.state[\"school\"+i] && this.state[\"decision\"+i]){\n    \n      //           // No College Selected\n      //           if (this.state[\"school\"+i] === \"0\"){\n      //             document.querySelector(\"#questionable\"+i).innerHTML = \"No evaluation.\"\n      //           }\n    \n      //           // College Selected\n      //           else{\n      //             let schoolName = document.querySelector(\"#school\"+i).options[this.state[\"school\"+i]].text;\n      //             let schoolDecision = document.querySelector(\"#decision\"+i).options[this.state[\"decision\"+i]].text;\n    \n      //             // Student says they were accepted\n      //             if (schoolDecision === \"Accepted\"){\n      //               let value = this.compareScores(schoolName,\"satMath\", true)+\n      //                           this.compareScores(schoolName,\"satEBRW\", true)+\n      //                           this.compareScores(schoolName,\"actComposite\", true);\n      //               console.log(value);\n      //               console.log(Math.round(value%1 * 10) / 10);\n      //               let parsedSchoolName = schoolName.replace(/\\s/g, '');\n    \n      //               // No data can be compared\n      //               if (Math.round(value%1 * 10) / 10 === .3){\n      //                 console.log(\"hi\");\n      //                 document.querySelector(\"#questionable\"+i).innerHTML = \"No evaluation.\"\n      //               }\n    \n      //               // Data is questionable, at least one field was below criteria\n      //               else if (value < 3){\n      //                 this.setState({[parsedSchoolName]: \"questionable\"});\n      //                 document.querySelector(\"#questionable\"+i).innerHTML = \"Questionable.\"\n      //               }\n    \n      //               // Data is good.  All comparable fields were within acceptance criteria.\n      //               else{\n      //                 this.setState({[parsedSchoolName]: \"approved\"});\n      //                 document.querySelector(\"#questionable\"+i).innerHTML = \"Approved.\"\n      //               }\n      //             }\n    \n      //             //Student says they were rejected.\n      //             else if (schoolDecision === \"Rejected\"){\n      //               let value = this.compareScores(schoolName,\"satMath\", false)+\n      //                           this.compareScores(schoolName,\"satEBRW\", false)+\n      //                           this.compareScores(schoolName,\"actComposite\", false);\n      //               console.log(value);\n      //               let parsedSchoolName = schoolName.replace(/\\s/g, '');\n    \n      //               // No data can be compared\n      //               if (Math.round(value%1 * 10) / 10 === .3){\n      //                 document.querySelector(\"#questionable\"+i).innerHTML = \"No evaluation.\"\n      //               }\n    \n      //               // Data is questionable.  All comparable fields were within acceptance criteria, and 1 was above 75% threshold.\n      //               else if (value > 3){\n      //                 this.setState({[parsedSchoolName]: \"questionable\"});\n      //                 document.querySelector(\"#questionable\"+i).innerHTML = \"Questionable.\"\n      //               }\n    \n      //               // Data is good.  At least one comparable field met rejection criteria.\n      //               else{\n      //                 this.setState({[parsedSchoolName]: \"approved\"});\n      //                 document.querySelector(\"#questionable\"+i).innerHTML = \"Approved.\"\n      //               }\n      //             }\n    \n      //             // Student is pending or on waitlist.\n      //             else{\n      //               document.querySelector(\"#questionable\"+i).innerHTML = \"No Acceptance Decision Made.\"\n      //             }\n      //           }\n      //         }\n    \n      //         // Either college or Decision was not selected.\n      //         else{\n      //           document.querySelector(\"#questionable\"+i).innerHTML = \"No evaluation.\"\n      //         }\n      //       }\n      //     }\n      //   }\n      //   else{\n      //     if (filledData == 0){\n      //       alert(\"Not enough Data\");\n      //     }\n      //     else{\n      //       alert(\"Invalid Data.\");\n      //     }\n      //   }\n      // }","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\n\nimport firebase, { db } from \"../../firebase\"\n\nclass RegisterScreen extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    userId: ''\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    var addToDB = true;\n    var idUsed = false;\n    let accsRef = db.collection('Accounts');\n    //check if user id is taken\n    const allAccs = accsRef.get()\n      .then(snapshot => {\n        snapshot.forEach(doc => {\n          console.log(this.state.userId);\n          console.log(doc.data().userID);\n          if(this.state.userId == doc.data().userID){\n            idUsed = true;\n            console.log(\"matched\");\n          }\n        });\n      })\n      .then(() => {if(idUsed == true){\n        alert(\"User ID has already been taken\");\n      }})\n      .catch(err => {\n        console.log('Error getting documents', err);\n      })//after checking if id has been used, create user\n      .then(() => {\n        if(idUsed == false){\n          firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n          .catch(err =>{\n            addToDB = false;\n            alert(err.message);\n          }).then( () => {\n            if(addToDB){\n              db.collection('Accounts').add({\n                firstName: this.state.firstName,\n                lastname: this.state.lastName,\n                userID: this.state.userId,\n                email: this.state.email,\n                password: this.state.password\n              })\n            }\n          }).then( () => {\n            db.collection('studentProfiles').add({\n              userid: this.state.userId,\n              password: this.state.password,\n              email: this.state.email,\n              applied_colleges: {},\n              act_composite: null,\n              act_english: null,\n              act_math: null,\n              act_reading: null,\n              act_science: null,\n              college_class: null,\n              gpa: null,\n              high_school_city: null,\n              high_school_name: null,\n              high_school_state: null,\n              major_1: null,\n              major_2: null,\n              num_ap_passed: null,\n              residence_state:null,\n              sat_chemistry:null,\n              sat_ebrw:null,\n              sat_eco_bio:null,\n              sat_literature:null,\n              sat_math:null,\n              sat_math_i:null,\n              sat_math_ii:null,\n              sat_mol_bio:null,\n              sat_physics: null,\n              sat_us_hist: null,\n              sat_world_hist: null\n            })\n            alert(\"Account Succesfully Created\");\n          }); \n        }\n      });\n      //\n      \n  }\n\n  render() {\n    return (\n      <div className=\"outlet register-container\">\n        <form onSubmit={this.handleSubmit} className=\"col s4 white register-form\">\n            <h5 className=\"register-header-text\">Register</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"userId\">User ID</label>\n              <input type=\"text\" name=\"userId\" id=\"userId\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            </div>\n          </form>\n      </div>\n    );\n  };\n}\n\nexport default compose()(RegisterScreen);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { loginHandler } from '../../store/database/asynchHandler'\n\nclass LoginScreen extends React.Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { props, state } = this;\n    const { firebase } = props;\n    const credentials = { ...state };\n    const authData = {\n      firebase,\n      credentials,\n    };\n\n    props.login(authData);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"outlet login-container\">\n        <form onSubmit={this.handleSubmit} className=\"col s4 white login-form\">\n            <h5 className=\"login-header-text\">Login</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            </div>\n          </form>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: authData => dispatch(loginHandler(authData)),\n});\n\n// We need firebaseConnect function to provide to this component\n// firebase object with auth method.\n// You can find more information on the link below\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(LoginScreen);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\n\nimport firebase, { db } from \"../../firebase\";\n\nclass HighSchoolSearchScreen extends React.Component {\n  constructor(props){\n    super(props);\n\n  }\n  state={\n    Name: null,\n    highschools: {},\n    GradRate: null,\n    State: null,\n    Ranking: null,\n    AvgSATMath: null,\n    AvgSATEBRW: null,\n    AvgACTComposite: null,\n    Type: null\n  }\n\n\n  sortTasks(sortingCriteria) {\n    \n    let list = Object.entries(this.state.highschools);\n  //  console.log(list); \n    list.sort(this.compareSimilarValues);\n    list = list.splice(0,list.length/2 +1);\n    let newList = {};\n    list.map((data)=>{\n      console.log(data);\n      newList[data[0]] = data[1];\n    });\n\n    console.log(newList);\n    this.setState({highschools:newList}); \n  }\n\n\n  handleChange = (e) =>{\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n//submit highschool search\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    var highDict = {};\n    let highRef = db.collection('ScrapedHighschoolData');\n\n    if(this.state.Name != null ){\n      const allHighschools = highRef.get()\n      .then(snapshot => {\n        snapshot.forEach(doc => {\n          highDict[doc.data().Name] = {\n            GradRate: doc.data().GradRate,\n            AvgACTComposite: doc.data().AvgACTComposite,\n            AvgSATEBRW: doc.data().AvgSATEBRW,\n            AvgSATMath: doc.data().AvgSATMath,\n            State: doc.data().State,\n            Type: doc.data().Type,\n            Name: doc.data().Name,\n            Ranking: doc.data().Ranking\n          };\n          if(this.state.Name != \"\"){ \n            var str1 = this.state.Name;\n            var str2 = doc.data().Name;\n\n            if(str1.toLowerCase() ===str2.toLowerCase()){\n        //    console.log(\"Found matching HIGHSCHOOL\", str1);\n              this.setState({\n              GradRate: doc.data().GradRate,\n              AvgACTComposite: doc.data().AvgACTComposite,\n              AvgSATEBRW: doc.data().AvgSATEBRW,\n              AvgSATMath: doc.data().AvgSATMath,\n              State: doc.data().State,\n              Type: doc.data().Type,\n              Name: doc.data().Name,\n              Ranking: doc.data().Ranking\n\n            });\n          }\n        }\n        });\n      })\n      .then(() => {\n      //  console.log(\"Finisheddddd Search\");\n        this.setState({highschools:highDict});\n        alert(\"Finished Searching\");\n        //check if the entered highschool is in the system\n\n        if(this.state.Name in highDict){\n        this.findSimilarity(highDict);\n        this.sortTasks(\"similarValue\");\n\n        }\n\n      });\n     \n     return;\n   }\n  }\n\n  compareScore(a,b, total){\n    let score = 0;\n    if (a == b){\n      return 1;\n    }\n    let difference = Math.abs(a - b);\n    score = (total - difference) / total;\n  //  console.log(\"value in compareScore is: difference, score\",difference, score);\n    return score;\n  }\n\nfindSimilarity(hsDict){\n  let similarity;\n  let temp;\n  for (var key in hsDict) {\n    //console.log(\"In FindSimilarity Function:\",key, hsDict[key]);\n    similarity = 0;\n    //comparisons\n    temp = hsDict[key];\n    \n    console.log(\"NOW SIMILARITY = \", similarity);\n    if(temp.AvgACTComposite == \"\" && this.state.AvgACTComposite == \"\")\n      similarity += this.compareScore(hsDict[key].AvgACTComposite, this.state.AvgACTComposite, 36.00);\n    else\n      similarity += 1.00;\n\n      console.log(\"NOW SIMILARITY = \", similarity);\n    if(temp.AvgSATEBRW == \"\" && this.state.AvgSATEBRW == \"\")\n      similarity += this.compareScore(hsDict[key].AvgSATEBRW, this.state.AvgSATEBRW, 800.00);\n    else\n      similarity += 1.00;\n\n      console.log(\"NOW SIMILARITY = \", similarity);\n    if(temp.AvgSATMath == \"\" && this.state.AvgSATMath == \"\")\n      similarity += this.compareScore(hsDict[key].AvgSATMath, this.state.AvgSATMath, 800.00);\n    else\n      similarity += 1.00;\n\n      console.log(\"NOW SIMILARITY = \", similarity);\n    if(temp.GradRate == \"\" && this.state.GradRate == \"\")\n      similarity += this.compareScore(hsDict[key].GradRate, this.state.GradRate, 100.00);\n    else\n      similarity += 1.00;\n\n      console.log(\"NOW SIMILARITY = \", similarity);\n    if(temp.Ranking == \"\" && this.state.Ranking == \"\")\n      similarity += this.compareScore(hsDict[key].Ranking, this.state.Ranking, 100.00);\n    else\n      similarity += 1.00;\n\n      console.log(\"NOW SIMILARITY = \", similarity);\n    if(temp.Type && this.state.Type)\n      similarity += this.compareStrings(hsDict[key].Type, this.state.Type);\n    else\n      similarity += 0.25;\n\n      console.log(\"NOW SIMILARITY = \", similarity);\n    if(temp.State && this.state.State)\n      similarity += this.compareStrings(hsDict[key].State, this.state.State);\n    else\n      similarity += 0.25;\n   console.log(\"\\nSimilarity of:\",key, similarity);\n   hsDict[key].SimilarValue = similarity;\n}\n}\n\ncompareStrings(a,b){\n  if(a!=null){\n  if(a.toLowerCase()==b.toLowerCase()){\n      return 0.25;\n  }\n}\n  return 0;\n}\n//comparator used by sort function\ncompareSimilarValues(item1,item2) {\n  if (item1[1][\"SimilarValue\"] > item2[1][\"SimilarValue\"])\n      return -1;\n  else if (item1[1][\"SimilarValue\"] < item2[1][\"SimilarValue\"])\n      return 1;\n  else\n      return 0;\n}\n\n\n  render() {\n    return (\n      <div className=\"outlet\">\n        <div className=\"highschool-list-container\">\n        <form onSubmit={this.handleSubmit}>\n            <div className=\"filter-item\">\n              <div className=\"filter-name-label\">Enter Highschool:</div>\n              <div className=\"filter-name\">\n                <input className=\"filter-name\" type=\"text\" id=\"Name\" onChange={this.handleChange} ></input>\n              </div>\n            </div>\n                <button type=\"submit\" className=\"btn green lighten-1\">Search</button>\n                </form>\n\n          {(Object.keys(this.state.highschools).length > 0 && this.state.Name in this.state.highschools)  ? (\n            <div>\n              <div className=\"search-num-highschools\">\n                {Object.keys(this.state.highschools).length-1} Similar Highschools found...\n              </div>\n              <table className=\"striped\">\n                <thead>\n                  <tr>\n                      <th className=\"search-header\">Name</th>\n                      <th className=\"search-header\">Ranking</th>\n                      <th className=\"search-header\">State</th>\n                      <th className=\"search-header\">Avg SAT</th>\n                      <th className=\"search-header\">Avg ACT</th>\n                      <th className=\"search-header\">School Type</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {Object.keys(this.state.highschools).map((highschool) => {\n                    \n                    \n                    let temp = this.state.highschools[highschool];\n                    if(temp[\"Name\"] != this.state.Name){\n                    return  <tr className=\"search-item\">\n                                <td className=\"search-item-name\"><Link to={{pathname: \"/high_schools/\", info: {temp}}} className=\"search-item-name\">{highschool}</Link></td>\n                                \n                                {temp[\"Ranking\"] ? (<td className=\"search-item\">{temp[\"Ranking\"]}</td>) : (<td className=\"search-item\">N/A</td>)}\n                                \n                                {temp[\"State\"] ? (<td className=\"search-item\">{temp[\"State\"]}</td>) : (<td className=\"search-item\">N/A</td>)}\n                                \n                                {(temp[\"AvgSATMath\"] && temp[\"AvgSATMath\"] != 'N/A') ? (<td className=\"search-item\">{temp[\"AvgSATMath\"] + temp[\"AvgSATEBRW\"] }</td>) : (<td className=\"search-item\">N/A</td>)}\n\n                                {temp[\"AvgACTComposite\"] ? (<td className=\"search-item\">{temp[\"AvgACTComposite\"]}</td>) : (<td className=\"search-item\">N/A</td>)}\n                                \n                                {temp[\"Type\"] ? (<td className=\"search-item\">{temp[\"Type\"]}</td>) : (<td className=\"search-item\">N/A</td>)}\n                                \n                                <td className=\"search-item\"></td>\n                            </tr>\n                  }\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (<div className=\"search-num-colleges\">\n            Please enter High School and select \"Search.\"\n          </div>)}\n        </div>\n\n      </div>\n    );\n  };\n}\n\nexport default compose()(HighSchoolSearchScreen);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\n\nclass RangeInput extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.divClass = this.props.children.charAt(0).toLowerCase()+(this.props.children.replace(/\\s/g, '')).slice(1);\n    this.divClassMin = this.divClass + \"Min\";\n    this.divClassMax = this.divClass + \"Max\";\n  }\n\n  render() {\n    return (\n      <div className=\"filter-item\">\n        <div className=\"filter-label\">\n          {this.props.children}:\n        </div>\n        <Row className=\"filter-row\">\n          <Col s={5}>\n            {this.props.prefix ? (\n              <div className=\"filter-range-prefix\">\n                <div className=\"filter-prefix\">{this.props.prefix}</div>\n                <input className=\"filter-range\" type=\"text\" id={this.divClassMin} onChange={this.props.handleChange} ></input>\n                <div className=\"filter-suffix\">{this.props.suffix}</div>\n              </div>\n             ) : (\n              <div className=\"filter-range\">\n                <div className=\"filter-prefix\">{this.props.prefix}</div>\n                <input className=\"filter-range\" type=\"text\" id={this.divClassMin} onChange={this.props.handleChange} ></input>\n                <div className=\"filter-suffix\">{this.props.suffix}</div>\n              </div>\n             )}\n          </Col>\n          <Col s={2}>\n            <div className=\"filter-range-separator\">to</div>\n          </Col>\n          <Col s={5}>\n          {this.props.prefix ? (\n              <div className=\"filter-range-prefix\">\n                <div className=\"filter-prefix\">{this.props.prefix}</div>\n                <input className=\"filter-range\" type=\"text\" id={this.divClassMax} onChange={this.props.handleChange} ></input>\n                <div className=\"filter-suffix\">{this.props.suffix}</div>\n              </div>\n             ) : (\n              <div className=\"filter-range\">\n                <div className=\"filter-prefix\">{this.props.prefix}</div>\n                <input className=\"filter-range\" type=\"text\" id={this.divClassMax} onChange={this.props.handleChange} ></input>\n                <div className=\"filter-suffix\">{this.props.suffix}</div>\n              </div>\n             )}\n          </Col>\n        </Row>\n      </div>\n    );\n  };\n}\n\nexport default compose()(RangeInput);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\n\nclass SelectorInput extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.divClass = this.props.children.charAt(0).toLowerCase()+(this.props.children.replace(/\\s/g, '')).slice(1);\n  }\n\n  render() {\n    return (\n      <div className=\"filter-item\">\n        <div className=\"filter-label\">\n          {this.props.children}:\n        </div>\n        <select id={this.divClass} onChange={this.props.handleChange} className=\"filter-select\">\n          <option className=\"option-default\" key=\"0\" value=\"0\">Select a Location:</option>\n          {this.props.options.map((choice, index) => {\n            return <option key={index+1} value={index+1}>{choice}</option>;\n          })}\n        </select>\n      </div>\n    );\n  };\n}\n\nexport default compose()(SelectorInput);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Modal, Button, Row, Col } from 'react-materialize';\n\nclass SelectorInputMajor extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.divClass = this.props.children.charAt(0).toLowerCase()+(this.props.children.replace(/\\s/g, '')).slice(1);\n  }\n\n  render() {\n    return (\n      <div className=\"filter-majors\">\n        <div className=\"filter-item-major\">\n          <div className=\"filter-label\">\n            {this.props.children}:\n          </div>\n          <select id={this.divClass} onChange={this.props.handleChange} className=\"filter-select\">\n            <option className=\"option-default\" key=\"0\" value=\"0\">Select a Major:</option>\n            {this.props.options.map((choice, index) => {\n              return <option key={index+1} value={index+1}>{choice}</option>;\n            })}\n          </select>\n        </div>\n      </div>\n      \n    );\n  };\n}\n\nexport default compose()(SelectorInputMajor);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport RangeInput from './RangeInput.js';\nimport SelectorInput from './SelectorInput.js';\nimport SelectorInputMajor from './SelectorInputMajor.js';\nimport { Modal, Button, Row, Col, Card } from 'react-materialize';\n\nimport firebase, { db } from \"../../firebase\";\n\nclass CollegeSearchScreen extends React.Component {\n  constructor(props){\n    super(props);\n    this.filters={};\n    this.currentItemSortCriteria = null;\n    this.newItemSortCriteria = null;\n    this.flipped = false;\n  }\n\n  state={\n    locations: [\"Northeast\",\"Midwest\",\"South\",\"West\"],\n    majors: [\"Accounting\",\"Architecture\",\"Art\",\"Biochemistry\",\"Biology\",\"Chemistry\",\"Computer Science\",\"Economics\",\"Engineering\",\"English\",\"Environmental Studies\",\"Graphic Design\",\"History\",\"Law\",\"Linguistics\",\"Mathematics\",\"Music\",\"Nursing\",\"Philosophy\",\"Physics\",\"Political Science\",\"Pre Med\",\"Psychology\",\"Religion\",\"Teaching\"],\n    colleges: {},\n    admissionRateMin: null,\n    filterName: '',\n    admissionRateMax: null,\n    costOfAttendanceMin: null,\n    costOfAttendanceMax: null,\n    sizeMin: null,\n    sizeMax: null,\n    major1: null,\n    major2: null,\n    location: null,\n    rankingMin: null,\n    rankingMax: null,\n    sATMathMin: null,\n    sATMathMax: null,\n    sATEBRWMin: null,\n    sATEBRWMax: null,\n    aCTCompositeMin: null,\n    aCTCompositeMax: null,\n    filterType: \"strict\"\n  }\n\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    console.log(this.state);\n    /*\n    this.setState({colleges:{\n      college1: \"Hello\",\n      college2: \"Hello\",\n      college3: \"Hello\",\n      college4: \"Hello\"\n    }});\n    */\n   var collegeDict = {};\n   let collegesRef = db.collection('Colleges');\n   //all null\n   if(this.state.admissionRateMin == null && this.state.filterName == '' && this.state.admissionRateMax == null && \n    this.state.costOfAttendanceMax == null && this.state.costOfAttendanceMin == null && this.state.sizeMin == null && \n    this.state.sizeMax == null && this.state.major1 == null && this.state.major2 == null && \n    this.state.location == null && this.state.rankingMin == null && this.state.rankingMax == null && \n    this.state.sATMathMin == null && this.state.sATMathMax == null && this.state.sATEBRWMin == null && \n    this.state.sATEBRWMax == null && this.state.aCTCompositeMin == null && this.state.aCTCompositeMax == null ){\n      const allColleges = collegesRef.get()\n      .then(snapshot => {\n        snapshot.forEach(doc => {\n          collegeDict[doc.data().Name] = {\n            AdmissionRate: doc.data().AdmissionRate,\n            AdmissionRate: doc.data().AdmissionRate,\n            AvgACTComposite: doc.data().AvgACTComposite,\n            AvgSATEBRW: doc.data().AvgSATEBRW,\n            AvgSATMath: doc.data().AvgSATMath,\n            CostOfAttendance: doc.data().CostOfAttendance,\n            Location: doc.data().Location,\n            Major1: doc.data().Major1,\n            Major2: doc.data().Major2,\n            Major3: doc.data().Major3,\n            Name: doc.data().Name,\n            Ranking: doc.data().Ranking,\n            Size: doc.data().Size\n          };\n        });\n      })\n      .then(() => {\n        console.log(\"Empty Filter Search\");\n        this.setState({colleges:collegeDict});\n        console.log(this.state);\n        this.sortTasks(\"name\");\n        alert(\"Finished Searching\");\n      });\n     return;\n   }\n   //strict search\n   if(this.state.filterType == \"strict\"){\n    const allColleges = collegesRef.get()\n      .then(snapshot => {\n        snapshot.forEach(doc => {\n          let tempAddition = {\n            AdmissionRate: doc.data().AdmissionRate,\n            AdmissionRate: doc.data().AdmissionRate,\n            AvgACTComposite: doc.data().AvgACTComposite,\n            AvgSATEBRW: doc.data().AvgSATEBRW,\n            AvgSATMath: doc.data().AvgSATMath,\n            CostOfAttendance: doc.data().CostOfAttendance,\n            Location: doc.data().Location,\n            Major1: doc.data().Major1,\n            Major2: doc.data().Major2,\n            Major3: doc.data().Major3,\n            Name: doc.data().Name,\n            Ranking: doc.data().Ranking,\n            Size: doc.data().Size\n          };\n          console.log(doc.data().Name);\n          //null checking\n          if(this.state.admissionRateMax == null || this.state.admissionRateMax == \"\"){\n            this.setState({admissionRateMax:101});\n          }\n          if(this.state.admissionRateMin == null || this.state.admissionRateMin == \"\"){\n            this.setState({admissionRateMin:-1});\n          }\n          \n          if(this.state.costOfAttendanceMax == null || this.state.costOfAttendanceMax == \"\"){\n            this.setState({costOfAttendanceMax:999999});\n          }\n          if(this.state.costOfAttendanceMin == null || this.state.costOfAttendanceMin == \"\"){\n            this.setState({costOfAttendanceMin: -1});\n          }\n\n          if(this.state.sizeMax == null || this.state.sizeMax == \"\"){\n            this.setState({sizeMax: 999999});\n          }\n          if(this.state.sizeMin == null || this.state.sizeMin == \"\"){\n            this.setState({sizeMin:-1});\n          }\n\n          if(this.state.rankingMax == null || this.state.rankingMax == \"\"){\n            this.setState({rankingMax:999999});\n          }\n          if(this.state.rankingMin == null || this.state.rankingMin == \"\"){\n            this.setState({rankingMin:-1});\n          }\n\n          if(this.state.sATMathMax == null || this.state.sATMathMax == \"\"){\n            this.setState({sATMathMax:801});\n          }\n          if(this.state.sATMathMin == null || this.state.sATMathMin == \"\"){\n            this.setState({sATMathMin:-1});\n          }\n\n          if(this.state.sATEBRWMax == null || this.state.sATEBRWMax == \"\"){\n            this.setState({sATEBRWMax:801});\n          }\n          if(this.state.sATEBRWMin == null || this.state.sATEBRWMin == \"\"){\n            this.setState({sATEBRWMin:-1});\n          }\n\n          if(this.state.aCTCompositeMax == null || this.state.aCTCompositeMax == \"\"){\n            this.setState({aCTCompositeMax:41});\n          }\n          if(this.state.aCTCompositeMin == null || this.state.aCTCompositeMin == \"\"){\n            this.setState({aCTCompositeMin:-1});\n          }\n          //\n          if((this.state.admissionRateMax >= doc.data().AdmissionRate && doc.data().AdmissionRate != null || this.state.admissionRateMax == 101) && \n          (this.state.admissionRateMin <= doc.data().AdmissionRate && doc.data().AdmissionRate != null || this.state.admissionRateMin == -1) && \n          (this.state.costOfAttendanceMax >= doc.data().CostOfAttendance && doc.data().CostOfAttendance != null || this.state.costOfAttendanceMax == 999999)&& \n          (this.state.costOfAttendanceMin <= doc.data().CostOfAttendance && doc.data().CostOfAttendance != null || this.state.costOfAttendanceMin == -1)&& \n          (this.state.sizeMax >= doc.data().Size && doc.data().Size != null || this.state.sizeMax == 999999)&& \n          (this.state.sizeMin <= doc.data().Size && doc.data().Size != null || this.state.sizeMin == -1)&& \n          (this.state.rankingMax >= doc.data().Ranking && doc.data().Ranking != null || this.state.rankingMax == 999999)&& \n          (this.state.rankingMin <= doc.data().Ranking && doc.data().Ranking != null || this.state.rankingMin == -1)&& \n          (this.state.sATMathMax >= doc.data().AvgSATMath && doc.data().AvgSATMath != null || this.state.sATMathMax == 801)&& \n          (this.state.sATMathMin <= doc.data().AvgSATMath && doc.data().AvgSATMath != null || this.state.sATMathMin == -1)&& \n          (this.state.sATEBRWMax >= doc.data().AvgSATEBRW && doc.data().AvgSATEBRW != null || this.state.sATEBRWMax == 801)&& \n          (this.state.sATEBRWMin <= doc.data().AvgSATEBRW && doc.data().AvgSATEBRW != null || this.state.sATEBRWMin == -1)&& \n          (this.state.aCTCompositeMax >= doc.data().AvgACTComposite && doc.data().AvgACTComposite != null || this.state.aCTCompositeMax == 41)&& \n          (this.state.aCTCompositeMin <= doc.data().AvgACTComposite && doc.data().AvgACTComposite != null || this.state.aCTCompositeMin == -1) \n          ){\n            //check for: filterName, major1/2, location\n            if(this.state.filterName == \"\" && this.state.major1 == null && this.state.major2 == null && this.state.location == null){\n              console.log(\"matched\");\n              collegeDict[doc.data().Name] = tempAddition;\n            }\n            //if name !empty\n            if(this.state.filterName != \"\" && (this.state.filterName.toLowerCase() == doc.data().Name.toLowerCase() \n            || doc.data().Name.toLowerCase().includes(this.state.filterName.toLowerCase()))){\n              if(this.state.major1 == null && this.state.major2 == null && this.state.location == null){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n              if(this.state.major1 == null && this.state.major2 == null && this.state.location != null){\n                if(this.state.location == doc.data().Location || this.state.location == \"Select a Location:\"){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 == null && this.state.major2 != null && this.state.location == null){\n                if(this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 == null && this.state.major2 != null && this.state.location != null){\n                if((this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)\n                && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 != null && this.state.major2 == null && this.state.location == null){\n                if(this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 != null && this.state.major2 == null && this.state.location != null){\n                if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n                && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 != null && this.state.major2 != null && this.state.location == null){\n                if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n                && (this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 != null && this.state.major2 != null && this.state.location != null){\n                if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n                && (this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)\n                && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n            }\n            //\n            if(this.state.filterName == \"\" ){\n              if(this.state.major1 == null && this.state.major2 == null && this.state.location == null){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n              if(this.state.major1 == null && this.state.major2 == null && this.state.location != null){\n                if(this.state.location == doc.data().Location || this.state.location == \"Select a Location:\"){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 == null && this.state.major2 != null && this.state.location == null){\n                if(this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 == null && this.state.major2 != null && this.state.location != null){\n                if((this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)\n                && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 != null && this.state.major2 == null && this.state.location == null){\n                if(this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 != null && this.state.major2 == null && this.state.location != null){\n                if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n                && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 != null && this.state.major2 != null && this.state.location == null){\n                if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n                && (this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n              if(this.state.major1 != null && this.state.major2 != null && this.state.location != null){\n                if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n                && (this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)\n                && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                  collegeDict[doc.data().Name] = tempAddition;\n                }\n              }\n            }\n          }\n        });\n      })\n      .then(() => {\n        this.setState({colleges:collegeDict});\n        this.sortTasks(\"name\");\n        alert(\"Finished Searching\");\n        //reset to nulls\n        if(this.state.admissionRateMax == 101){\n          this.setState({admissionRateMax : null});\n        }\n        if(this.state.admissionRateMin == -1){\n          this.setState({admissionRateMin : null});\n        }\n        if(this.state.costOfAttendanceMax == 999999){\n          this.setState({costOfAttendanceMax: null});\n        }\n        if(this.state.costOfAttendanceMin == -1){\n          this.setState({costOfAttendanceMin: null});\n        }\n        if(this.state.sizeMax == 999999){\n          this.setState({sizeMax: null});\n        }\n        if(this.state.sizeMin == -1){\n          this.setState({sizeMin: null});\n        }\n        if(this.state.rankingMax == 999999){\n          this.setState({rankingMax: null});\n        }\n        if(this.state.rankingMin == -1){\n          this.setState({rankingMin: null});\n        }\n        if(this.state.sATMathMax == 801){\n          this.setState({sATMathMax: null});\n        }\n        if(this.state.sATMathMin == -1){\n          this.setState({sATMathMin: null});\n        }\n        if(this.state.sATEBRWMax == 801){\n          this.setState({sATEBRWMax: null});\n        }\n        if(this.state.sATEBRWMin == -1){\n          this.setState({sATEBRWMin: null});\n        }\n        if(this.state.aCTCompositeMax == 41){\n          this.setState({aCTCompositeMax: null});\n        }\n        if(this.state.aCTCompositeMin == -1){\n          this.setState({aCTCompositeMin: null});\n        }\n        //\n      });\n   // LAX SEARCH\n   }else{\n    const allColleges = collegesRef.get()\n    .then(snapshot => {\n      snapshot.forEach(doc => {\n        let tempAddition = {\n          AdmissionRate: doc.data().AdmissionRate,\n          AdmissionRate: doc.data().AdmissionRate,\n          AvgACTComposite: doc.data().AvgACTComposite,\n          AvgSATEBRW: doc.data().AvgSATEBRW,\n          AvgSATMath: doc.data().AvgSATMath,\n          CostOfAttendance: doc.data().CostOfAttendance,\n          Location: doc.data().Location,\n          Major1: doc.data().Major1,\n          Major2: doc.data().Major2,\n          Major3: doc.data().Major3,\n          Name: doc.data().Name,\n          Ranking: doc.data().Ranking,\n          Size: doc.data().Size\n        };\n        console.log(doc.data().Name);\n        //null checking\n        if(this.state.admissionRateMax == null || this.state.admissionRateMax == \"\"){\n          this.setState({admissionRateMax:101});\n        }\n        if(this.state.admissionRateMin == null || this.state.admissionRateMin == \"\"){\n          this.setState({admissionRateMin:-1});\n        }\n        \n        if(this.state.costOfAttendanceMax == null || this.state.costOfAttendanceMax == \"\"){\n          this.setState({costOfAttendanceMax:999999});\n        }\n        if(this.state.costOfAttendanceMin == null || this.state.costOfAttendanceMin == \"\"){\n          this.setState({costOfAttendanceMin: -1});\n        }\n\n        if(this.state.sizeMax == null || this.state.sizeMax == \"\"){\n          this.setState({sizeMax: 999999});\n        }\n        if(this.state.sizeMin == null || this.state.sizeMin == \"\"){\n          this.setState({sizeMin:-1});\n        }\n\n        if(this.state.rankingMax == null || this.state.rankingMax == \"\"){\n          this.setState({rankingMax:999999});\n        }\n        if(this.state.rankingMin == null || this.state.rankingMin == \"\"){\n          this.setState({rankingMin:-1});\n        }\n\n        if(this.state.sATMathMax == null || this.state.sATMathMax == \"\"){\n          this.setState({sATMathMax:801});\n        }\n        if(this.state.sATMathMin == null || this.state.sATMathMin == \"\"){\n          this.setState({sATMathMin:-1});\n        }\n\n        if(this.state.sATEBRWMax == null || this.state.sATEBRWMax == \"\"){\n          this.setState({sATEBRWMax:801});\n        }\n        if(this.state.sATEBRWMin == null || this.state.sATEBRWMin == \"\"){\n          this.setState({sATEBRWMin:-1});\n        }\n\n        if(this.state.aCTCompositeMax == null || this.state.aCTCompositeMax == \"\"){\n          this.setState({aCTCompositeMax:41});\n        }\n        if(this.state.aCTCompositeMin == null || this.state.aCTCompositeMin == \"\"){\n          this.setState({aCTCompositeMin:-1});\n        }\n        //\n        if(((this.state.admissionRateMax >= doc.data().AdmissionRate) || (doc.data().AdmissionRate == null))\n        && ((this.state.admissionRateMin <= doc.data().AdmissionRate) || (doc.data().AdmissionRate == null))\n        && ((this.state.costOfAttendanceMax >= doc.data().CostOfAttendance) || (doc.data().CostOfAttendance == null))\n        && ((this.state.costOfAttendanceMin <= doc.data().CostOfAttendance) || (doc.data().CostOfAttendance == null))\n        && ((this.state.sizeMax >= doc.data().Size) || (doc.data().Size == null))\n        && ((this.state.sizeMin <= doc.data().Size) || (doc.data().Size == null))\n        && ((this.state.rankingMax >= doc.data().Ranking) || (doc.data().Ranking == null))\n        && ((this.state.rankingMin <= doc.data().Ranking) || (doc.data().Ranking == null))\n        && ((this.state.sATMathMax >= doc.data().AvgSATMath) || (doc.data().AvgSATMath == null))\n        && ((this.state.sATMathMin <= doc.data().AvgSATMath) || (doc.data().AvgSATMath == null))\n        && ((this.state.sATEBRWMax >= doc.data().AvgSATEBRW) || (doc.data().AvgSATEBRW == null))\n        && ((this.state.sATEBRWMin <= doc.data().AvgSATEBRW) || (doc.data().AvgSATEBRW == null))\n        && ((this.state.aCTCompositeMax >= doc.data().AvgACTComposite) || (doc.data().AvgACTComposite == null))\n        && ((this.state.aCTCompositeMin <= doc.data().AvgACTComposite  ) || (doc.data().AvgACTComposite == null))\n        ){\n          //check for: filterName, major1/2, location\n          if(this.state.filterName == \"\" && this.state.major1 == null && this.state.major2 == null && this.state.location == null){\n            console.log(\"matched\");\n            collegeDict[doc.data().Name] = tempAddition;\n          }\n          //if name !empty\n          if(this.state.filterName != \"\" && (this.state.filterName.toLowerCase() == doc.data().Name.toLowerCase() \n          || doc.data().Name.toLowerCase().includes(this.state.filterName.toLowerCase()))){\n            if(this.state.major1 == null && this.state.major2 == null && this.state.location == null){\n              collegeDict[doc.data().Name] = tempAddition;\n            }\n            if(this.state.major1 == null && this.state.major2 == null && this.state.location != null){\n              if(this.state.location == doc.data().Location || this.state.location == \"Select a Location:\"){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 == null && this.state.major2 != null && this.state.location == null){\n              if(this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 == null && this.state.major2 != null && this.state.location != null){\n              if((this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)\n              && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 != null && this.state.major2 == null && this.state.location == null){\n              if(this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 != null && this.state.major2 == null && this.state.location != null){\n              if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n              && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 != null && this.state.major2 != null && this.state.location == null){\n              if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n              && (this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 != null && this.state.major2 != null && this.state.location != null){\n              if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n              && (this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)\n              && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n          }\n          //\n          if(this.state.filterName == \"\" ){\n            if(this.state.major1 == null && this.state.major2 == null && this.state.location == null){\n              collegeDict[doc.data().Name] = tempAddition;\n            }\n            if(this.state.major1 == null && this.state.major2 == null && this.state.location != null){\n              if(this.state.location == doc.data().Location || this.state.location == \"Select a Location:\"){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 == null && this.state.major2 != null && this.state.location == null){\n              if(this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 == null && this.state.major2 != null && this.state.location != null){\n              if((this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)\n              && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 != null && this.state.major2 == null && this.state.location == null){\n              if(this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 != null && this.state.major2 == null && this.state.location != null){\n              if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n              && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 != null && this.state.major2 != null && this.state.location == null){\n              if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n              && (this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n            if(this.state.major1 != null && this.state.major2 != null && this.state.location != null){\n              if((this.state.major1 == doc.data().Major1 || this.state.major1 == doc.data().Major2 || this.state.major1 == doc.data().Major3)\n              && (this.state.major2 == doc.data().Major1 || this.state.major2 == doc.data().Major2 || this.state.major2 == doc.data().Major3)\n              && (this.state.location == doc.data().Location || this.state.location == \"Select a Location:\")){\n                collegeDict[doc.data().Name] = tempAddition;\n              }\n            }\n          }\n        }\n      });\n    })\n    .then(() => {\n      this.setState({colleges:collegeDict});\n      this.sortTasks(\"name\");\n      alert(\"Finished Searching\");\n      //reset to nulls\n      if(this.state.admissionRateMax == 101){\n        this.setState({admissionRateMax : null});\n      }\n      if(this.state.admissionRateMin == -1){\n        this.setState({admissionRateMin : null});\n      }\n      if(this.state.costOfAttendanceMax == 999999){\n        this.setState({costOfAttendanceMax: null});\n      }\n      if(this.state.costOfAttendanceMin == -1){\n        this.setState({costOfAttendanceMin: null});\n      }\n      if(this.state.sizeMax == 999999){\n        this.setState({sizeMax: null});\n      }\n      if(this.state.sizeMin == -1){\n        this.setState({sizeMin: null});\n      }\n      if(this.state.rankingMax == 999999){\n        this.setState({rankingMax: null});\n      }\n      if(this.state.rankingMin == -1){\n        this.setState({rankingMax: null});\n      }\n      if(this.state.sATMathMax == 801){\n        this.setState({sATMathMax: null});\n      }\n      if(this.state.sATMathMin == -1){\n        this.setState({sATMathMin: null});\n      }\n      if(this.state.sATEBRWMax == 801){\n        this.setState({sATEBRWMax: null});\n      }\n      if(this.state.sATEBRWMin == -1){\n        this.setState({sATEBRWMin: null});\n      }\n      if(this.state.aCTCompositeMax == 41){\n        this.setState({aCTCompositeMax: null});\n      }\n      if(this.state.aCTCompositeMin == -1){\n        this.setState({aCTCompositeMin: null});\n      }\n      //\n    });\n    console.log(this.state);\n   }\n    \n  }\n\n  sortTasks(sortingCriteria) {\n    this.flip = false;\n    this.newItemSortCriteria = sortingCriteria;\n    let list = Object.entries(this.state.colleges);\n    console.log(list);\n    console.log(this.newItemSortCriteria+this.currentItemSortCriteria);\n    if ( this.newItemSortCriteria === this.currentItemSortCriteria){\n        this.flip = true;\n    }\n    if(this.flip && !this.flipped){\n        if (this.newItemSortCriteria === \"name\"){\n            list.sort(this.compareNameFlip);\n        }\n        else if(this.newItemSortCriteria === \"ranking\"){\n            list.sort(this.compareRankingFlip);\n        }\n        else if(this.newItemSortCriteria === \"admission\"){\n            list.sort(this.compareAdmissionFlip);\n        }\n        else if(this.newItemSortCriteria === \"cost\"){\n            list.sort(this.compareCostFlip);\n        }\n        else if(this.newItemSortCriteria === \"score\"){\n            list.sort(this.compareScoreFlip);\n        }\n        this.flipped = true;\n    }\n    else{\n        if (this.newItemSortCriteria === \"name\"){\n            list.sort(this.compareName);\n        }\n        else if(this.newItemSortCriteria === \"ranking\"){\n            list.sort(this.compareRanking);\n        }\n        else if(this.newItemSortCriteria === \"admission\"){\n            list.sort(this.compareAdmission);\n        }\n        else if(this.newItemSortCriteria === \"cost\"){\n          list.sort(this.compareCost);\n        }\n        else if(this.newItemSortCriteria === \"score\"){\n            list.sort(this.compareScore);\n        }\n        this.flipped = false;\n    }\n    let newList = {};\n    list.map((data)=>{\n      console.log(data);\n      newList[data[0]] = data[1];\n    })\n\n    console.log(newList);\n    this.setState({colleges:newList});\n    this.currentItemSortCriteria = sortingCriteria;\n    this.setState({colleges:newList});\n  }\n\n  // SORT BY NAME\n  compareName(item1,item2) {\n    if (item1[0] < item2[0])\n        return -1;\n    else if (item1[0] > item2[0])\n        return 1;\n    else\n        return 0;\n  }\n\n  compareNameFlip(item1,item2) {\n    let temp = item1;\n    item1 = item2;\n    item2 = temp;\n    if (item1[0] < item2[0])\n        return -1;\n    else if (item1[0] > item2[0])\n        return 1;\n    else\n        return 0;\n  }\n  // SORT BY NAME\n  compareName(item1,item2) {\n    if (item1[0] < item2[0])\n        return -1;\n    else if (item1[0] > item2[0])\n        return 1;\n    else\n        return 0;\n  }\n\n  compareNameFlip(item1,item2) {\n    let temp = item1;\n    item1 = item2;\n    item2 = temp;\n    if (item1[0] < item2[0])\n        return -1;\n    else if (item1[0] > item2[0])\n        return 1;\n    else\n        return 0;\n  }\n\n  // SORT BY Ranking\n  compareRanking(item1,item2) {\n    if (item1[1][\"Ranking\"] < item2[1][\"Ranking\"])\n        return -1;\n    else if (item1[1][\"Ranking\"] > item2[1][\"Ranking\"])\n        return 1;\n    else\n        return 0;\n  }\n\n  compareRankingFlip(item1,item2) {\n    let temp = item1;\n    item1 = item2;\n    item2 = temp;\n    if (item1[1][\"Ranking\"] < item2[1][\"Ranking\"])\n        return -1;\n    else if (item1[1][\"Ranking\"] > item2[1][\"Ranking\"])\n        return 1;\n    else\n        return 0;\n  }\n\n  // SORT BY Admission Rate\n  compareAdmission(item1,item2) {\n    if (item1[1][\"AdmissionRate\"] < item2[1][\"AdmissionRate\"])\n        return -1;\n    else if (item1[1][\"AdmissionRate\"] > item2[1][\"AdmissionRate\"])\n        return 1;\n    else\n        return 0;\n  }\n\n  compareAdmissionFlip(item1,item2) {\n    let temp = item1;\n    item1 = item2;\n    item2 = temp;\n    if (item1[1][\"AdmissionRate\"] < item2[1][\"AdmissionRate\"])\n        return -1;\n    else if (item1[1][\"AdmissionRate\"] > item2[1][\"AdmissionRate\"])\n        return 1;\n    else\n        return 0;\n  }\n\n  // SORT BY Cost\n  compareCost(item1,item2) {\n    if (item1[1][\"CostOfAttendance\"] < item2[1][\"CostOfAttendance\"])\n        return -1;\n    else if (item1[1][\"CostOfAttendance\"] > item2[1][\"CostOfAttendance\"])\n        return 1;\n    else\n        return 0;\n  }\n\n  compareCostFlip(item1,item2) {\n    let temp = item1;\n    item1 = item2;\n    item2 = temp;\n    if (item1[1][\"CostOfAttendance\"] < item2[1][\"CostOfAttendance\"])\n        return -1;\n    else if (item1[1][\"CostOfAttendance\"] > item2[1][\"CostOfAttendance\"])\n        return 1;\n    else\n        return 0;\n  }\n\n  // SORT BY Score\n  compareScore(item1,item2) {\n    if (item1[1][\"Ranking\"] < item2[1][\"Ranking\"])\n        return -1;\n    else if (item1[1][\"Ranking\"] > item2[1][\"Ranking\"])\n        return 1;\n    else\n        return 0;\n  }\n\n  compareScoreFlip(item1,item2) {\n    let temp = item1;\n    item1 = item2;\n    item2 = temp;\n    if (item1[1][\"Ranking\"] < item2[1][\"Ranking\"])\n        return -1;\n    else if (item1[1][\"Ranking\"] > item2[1][\"Ranking\"])\n        return 1;\n    else\n        return 0;\n  }\n\n  handleChange = (e) =>{\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleCheck = (e) =>{\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [\"filterType\"]: target.id,\n    }));\n  }\n\n  handleSelect = (e) =>{\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.options[target.value].text,\n    }));\n  }\n\n  componentDidMount(){\n    document.getElementById(\"strict\").checked = true;\n  }\n  /*\n  setNull = (e) =>{\n    let collegeRef = db.collection('Colleges').doc(\"Fq3BSuaMXuNI2YO0dXuL\").set({\n      AdmissionRate: 74,\n      AvgACTComposite: null,\n      AvgSATEBRW: 502,\n      AvgSATMath: 490,\n      CostOfAttendance: null,\n      Location: \"West\",\n      Major1: \"Business\",\n      Major2: \"Health Sciences\",\n      Major3: \"Social Sciences\",\n      Name: \"California State University, East Bay\",\n      Ranking:  450,\n      Size: 12998\n    });\n  }\n  */\n  render() {\n    return (\n      <div className=\"outlet college-search-outlet\">\n\n        {/* Contains all Filter Information */}\n\n        {/* All Sliders can be ranges as well\n\n        Name (Text)\n        Admission Rate (Slider)\n        Cost of Attendance (Slider)\n        Location (Select)\n        Major(s) (Select, 2)\n        Size (Slider)\n        Ranking (Slider)\n        Average Test Scores (Label)\n        -SAT Math (Slider)\n        -SAT EBRW (Slider)\n        -ACT Composite (Slider)\n\n        Filter Type (Radio)  */}\n        <div className=\"filter-container\">\n          <div className=\"filter-header\">\n            Filters\n          </div>\n\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"filter-item\">\n              <div className=\"filter-name-label\">Name:</div>\n              <div className=\"filter-name\">\n                <input className=\"filter-name\" type=\"text\" id=\"filterName\" onChange={this.handleChange} ></input>\n              </div>\n            </div>\n            <RangeInput\n              handleChange={this.handleChange}\n              min={0}\n              max={5}\n              suffix={\"%\"}>\n              Admission Rate\n            </RangeInput>\n\n            <RangeInput\n              handleChange={this.handleChange}\n              min={0}\n              max={5}\n              prefix={\"$\"}>\n              Cost Of Attendance\n            </RangeInput>\n\n            <SelectorInput\n              handleChange={this.handleSelect}\n              options={this.state.locations}>\n              Location\n            </SelectorInput>\n\n            <RangeInput\n              handleChange={this.handleChange}\n              min={0}\n              max={5}>\n              Size\n            </RangeInput>\n\n            <RangeInput\n              handleChange={this.handleChange}\n              min={0}\n              max={150}>\n              Ranking\n            </RangeInput>\n\n            <div className=\"filter-score-label\">\n              Major(s)\n            </div>\n\n            <SelectorInputMajor\n              handleChange={this.handleSelect}\n              options={this.state.majors}>\n              Major 1\n            </SelectorInputMajor>\n\n            <SelectorInputMajor\n              handleChange={this.handleSelect}\n              options={this.state.majors}>\n              Major 2\n            </SelectorInputMajor>\n\n            <div className=\"filter-majors-spacer\"></div>\n\n            <div className=\"filter-score-label\">\n              Average Test Scores:\n            </div>\n\n            <div className=\"filter-scores\">\n              <RangeInput\n                handleChange={this.handleChange}\n                min={0}\n                max={800}>\n                SAT Math\n              </RangeInput>\n\n              <RangeInput\n                handleChange={this.handleChange}\n                min={0}\n                max={800}>\n                SAT EBRW\n              </RangeInput>\n\n              <RangeInput\n                handleChange={this.handleChange}\n                min={0}\n                max={40}>\n                ACT Composite\n              </RangeInput>\n            </div>\n\n            <div className=\"filter-majors-label\">\n              Filter Type:\n            </div>\n\n            <Row>\n              <Col s={1}>\n                \n              </Col>\n              <Col s={4}>\n                <label className=\"filter-radio\">Strict\n                  <input onChange={this.handleCheck} id=\"strict\" name=\"filter-type-sl\" className=\"filter-radio-option\" type=\"radio\"/>\n                </label>\n              </Col>\n              <Col s={4}>\n                <label className=\"filter-radio\">Lax\n                  <input onChange={this.handleCheck} id=\"lax\" name=\"filter-type-sl\" className=\"filter-radio-option\" type=\"radio\"/>\n                </label>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col s={1}>\n\n              </Col>\n              <Col s={5}>\n                <button type=\"submit\" className=\"btn green lighten-1\">Search</button>\n              </Col>\n              <Col s={5}>\n                <button onClick={this.resetFilters} className=\"btn red lighten-1\">Reset</button>\n              </Col>\n            </Row>\n          </form>\n          \n          \n\n          \n          \n\n        </div>\n\n        {/* Contains all listing information */}\n        <div className=\"college-list-container\">\n          {Object.keys(this.state.colleges).length >0 ? (\n            <div>\n              <div className=\"search-num-colleges\">\n                {Object.keys(this.state.colleges).length} colleges found...\n              </div>\n              <table className=\"striped\">\n                <thead>\n                  <tr>\n                      <th className=\"search-header\"><a className=\"search-header-text\" onClick={()=>this.sortTasks(\"name\")}>Name</a></th>\n                      <th className=\"search-header\"><a className=\"search-header-text\" onClick={()=>this.sortTasks(\"ranking\")}>Ranking</a></th>\n                      <th className=\"search-header\"><a className=\"search-header-text\" onClick={()=>this.sortTasks(\"admission\")}>Admission Rate</a></th>\n                      <th className=\"search-header\"><a className=\"search-header-text\" onClick={()=>this.sortTasks(\"cost\")}>Cost of Attendance</a></th>\n                      <th className=\"search-header\"><a className=\"search-header-text\" onClick={()=>this.sortTasks(\"score\")}>Recommendation Score</a></th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {Object.keys(this.state.colleges).map((college) => {\n                    let temp = this.state.colleges[college];\n                    return  <tr className=\"search-item\">\n                                <td className=\"search-item-name\"><Link to={{pathname: \"/college/\"+college, info: {temp}}} className=\"search-item-name\">{college}</Link></td>\n                                \n                                {temp[\"Ranking\"] ? (<td className=\"search-item\">{temp[\"Ranking\"]}</td>) : (<td className=\"search-item\">N/A</td>)}\n                                \n                                {temp[\"AdmissionRate\"] ? (<td className=\"search-item\">{temp[\"AdmissionRate\"]}%</td>) : (<td className=\"search-item\">N/A</td>)}\n                                \n                                {temp[\"CostOfAttendance\"] ? (<td className=\"search-item\">${temp[\"CostOfAttendance\"].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>) : (<td className=\"search-item\">N/A</td>)}\n                                \n                                <td className=\"search-item\"></td>\n                            </tr>\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (<div className=\"search-num-colleges\">\n            Please enter any criteria in the filters provided and select \"Search.\"\n            <br />\n            <br />\n            Strict Filtering:  If the college is missing any information you have specified, it will not show up in the list of results.\n            <br />\n            Lax Filtering: If the college is missing any information you have specified, it will STILL show up in the list of results.\n  \n          </div>)}\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default compose()(CollegeSearchScreen);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport RangeInput from './RangeInput.js';\nimport SelectorInput from './SelectorInput.js';\nimport SelectorInputMajor from './SelectorInputMajor.js';\nimport { Modal, Button, Row, Col, Card } from 'react-materialize';\n\nimport firebase, { db } from \"../../firebase\";\n\nclass CollegeInfoScreen extends React.Component {\n  constructor(props){\n    super(props);\n    this.filters={};\n    this.currentItemSortCriteria = null;\n    this.newItemSortCriteria = null;\n    this.flipped = false;\n  }\n\n  state={\n    locations: [\"Northeast\",\"Midwest\",\"South\",\"West\"],\n    majors: [\"Accounting\",\"Architecture\",\"Art\",\"Biochemistry\",\"Biology\",\"Chemistry\",\"Computer Science\",\"Economics\",\"Engineering\",\"English\",\"Environmental Studies\",\"Graphic Design\",\"History\",\"Law\",\"Linguistics\",\"Mathematics\",\"Music\",\"Nursing\",\"Philosophy\",\"Physics\",\"Political Science\",\"Pre Med\",\"Psychology\",\"Religion\",\"Teaching\"],\n    colleges: {},\n    admissionRateMin: null,\n    filterName: '',\n    admissionRateMax: null,\n    costOfAttendanceMin: null,\n    costOfAttendanceMax: null,\n    sizeMin: null,\n    sizeMax: null,\n    major1: null,\n    major2: null,\n    location: null,\n    rankingMin: null,\n    rankingMax: null,\n    sATMathMin: null,\n    sATMathMax: null,\n    sATEBRWMin: null,\n    sATEBRWMax: null,\n    aCTCompositeMin: null,\n    aCTCompositeMax: null,\n    filterType: \"strict\"\n  }\n\n  render() {\n    let info = this.props.location.info;\n    console.log(info);\n    console.log(this.props.collegeInfo);\n    if (!info) {\n      return <Redirect to=\"/\" />;\n    }\n\n    let infoCollege = info.temp;\n\n    return (\n      <div className=\"outlet profile-container\">\n        <div className=\"college-container\">\n          <div className=\"college-header\">\n            {infoCollege[\"Name\"]}\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      collegeInfo: state.firestore.data\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect(props => {\n    if (!props.location.info) \n    {\n        return [];\n    }\n    else\n    {\n        let info = props.location.info.temp;\n        let infoName = info[\"Name\"];\n        return [\n        { collection: 'Colleges',\n            where: ['Name', '==', infoName]\n        }];\n    }\n}),\n)(CollegeInfoScreen);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport firebase from '../../firebase';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nimport CSVReader from 'react-csv-reader';\n\nimport { db } from \"../../firebase\"\n\nclass AdminScreen extends React.Component {\n  state = {\n    decisions: {},\n    scrapeRes: \"loaded\"\n  }\n\n  handleFileLoad = (data) =>{\n    console.log(data);\n    data.forEach((datum)=>{\n      db.collection(\"studentProfiles\").where(\"userid\",\"==\",datum.userid.toLowerCase())\n      .get()\n      .then(function(querySnapshot){\n        if (querySnapshot.size == 0){\n          console.log(\"Not Found . . . Creating\");\n          db.collection(\"studentProfiles\").add({\n            userid: datum.userid.toLowerCase(),\n            email: datum.userid.toLowerCase()+\"@c4me.com\",\n            password: datum.password,\n            residence_state: datum.residence_state,\n            high_school_name: datum.high_school_name,\n            high_school_city: datum.high_school_city,\n            high_school_state: datum.high_school_state,\n            gpa: datum.gpa,\n            college_class: datum.college_class,\n            major_1: datum.major_1,\n            major_2: datum.major_2,\n            sat_math: datum.sat_math,\n            sat_ebrw: datum.sat_ebrw,\n            act_english: datum.act_english,\n            act_math: datum.act_math,\n            act_reading: datum.act_reading,\n            act_science: datum.act_science,\n            act_composite: datum.act_composite,\n            sat_literature: datum.sat_literature,\n            sat_us_hist: datum.sat_us_hist,\n            sat_world_hist: datum.sat_world_hist,\n            sat_math_i: datum.sat_math_i,\n            sat_math_ii: datum.sat_math_ii,\n            sat_eco_bio: datum.sat_eco_bio,\n            sat_mol_bio: datum.sat_mol_bio,\n            sat_chemistry: datum.sat_chemistry,\n            sat_physics: datum.sat_physics,\n            num_ap_passed: datum.num_ap_passed,\n            applied_colleges: {}\n          })\n        }\n        else{\n          console.log(\"Found . . . Updating\");\n          querySnapshot.forEach(function(doc) {\n            db.collection(\"studentProfiles\").doc(doc.id).update({\n              userid: datum.userid.toLowerCase(),\n              email: datum.userid.toLowerCase()+\"@c4me.com\",\n              password: datum.password,\n              residence_state: datum.residence_state,\n              high_school_name: datum.high_school_name,\n              high_school_city: datum.high_school_city,\n              high_school_state: datum.high_school_state,\n              gpa: datum.gpa,\n              college_class: datum.college_class,\n              major_1: datum.major_1,\n              major_2: datum.major_2,\n              sat_math: datum.sat_math,\n              sat_ebrw: datum.sat_ebrw,\n              act_english: datum.act_english,\n              act_math: datum.act_math,\n              act_reading: datum.act_reading,\n              act_science: datum.act_science,\n              act_composite: datum.act_composite,\n              sat_literature: datum.sat_literature,\n              sat_us_hist: datum.sat_us_hist,\n              sat_world_hist: datum.sat_world_hist,\n              sat_math_i: datum.sat_math_i,\n              sat_math_ii: datum.sat_math_ii,\n              sat_eco_bio: datum.sat_eco_bio,\n              sat_mol_bio: datum.sat_mol_bio,\n              sat_chemistry: datum.sat_chemistry,\n              sat_physics: datum.sat_physics,\n              num_ap_passed: datum.num_ap_passed,\n              applied_colleges: {}\n            })\n          })\n        }\n      });\n\n      db.collection('Accounts').where(\"userID\",\"==\",datum.userid.toLowerCase())\n      .get()\n      .then(function(querySnapshot){\n        if (querySnapshot.size == 0){\n          console.log(\"Not Found . . . Creating\");\n          firebase.auth().createUserWithEmailAndPassword(datum.userid.toLowerCase()+\"@c4me.com\", datum.password)\n          db.collection('Accounts').add({\n            firstName: \"\",\n            lastname: \"\",\n            userID: datum.userid.toLowerCase(),\n            email: datum.userid.toLowerCase()+\"@c4me.com\",\n            password: datum.password\n          })\n        }\n        else{\n          console.log(\"Account exists\");\n\n          // querySnapshot.forEach(function(doc) {\n          //   db.collection('Accounts').doc(doc.id).update({\n          //     firstName: \"\",\n          //     lastname: \"\",\n          //     userID: datum.userid.toLowerCase(),\n          //     email: datum.userid.toLowerCase()+\"@c4me.com\",\n          //     password: datum.password\n          //   })\n          // });\n        }\n      });\n    });\n  } \n\n  handleApplicationFileLoad = (data) =>{\n    console.log(data);\n    let fullData = {};\n    let approvedDecisions = {};\n    let questionableDecisions = {};\n    let allDecisions = {};\n\n\n    data.forEach((datum)=>{\n      if (datum.userid){\n         if (!(datum.userid.toLowerCase() in fullData)){\n          fullData[datum.userid.toLowerCase()] = [];\n          let userData = {\n            [datum.college]: datum.status,\n          }\n          let temp = fullData[datum.userid.toLowerCase()];\n          temp.push(userData);\n          fullData[datum.userid.toLowerCase()] = temp;\n        }\n        else{\n          let userData = {\n            [datum.college]: datum.status,\n          }\n          let temp = fullData[datum.userid.toLowerCase()];\n          temp.push(userData);\n          fullData[datum.userid.toLowerCase()] = temp;\n        }\n      }\n     \n    });\n    console.log(fullData);\n\n    Object.keys(fullData).forEach((user) => {\n      let temp = {}\n      fullData[user].forEach((application)=>{\n        for (let college in application){\n          temp[college.replace(/,/g, '')] = application[college];\n        }\n      })\n      console.log(temp);\n      db.collection(\"studentProfiles\").where(\"userid\",\"==\",user)\n      .get()\n      .then(function(querySnapshot){\n        querySnapshot.forEach(function(doc) {\n          db.collection(\"studentProfiles\").doc(doc.id).update({\n            applied_colleges: temp,\n          })\n        })\n      })\n    })\n\n    // Run questionable decisions algo on all of them\n\n    // let id = \"40_il_43\"\n\n    // db.collection('studentProfiles').where(\"userid\",\"==\",id)\n    // .get()\n    // .then(function(querySnapshot){\n    //   if (querySnapshot.size == 0){\n    //     console.log(\"Not Found\");\n    //   }\n    //   else{\n    //     querySnapshot.forEach(function(doc) {\n    //       console.log(\"Found\");\n    //       console.log(doc.data());\n    //       let temp = doc.data();\n    //       Object.keys(temp.applied_colleges).forEach((college)=>{\n    //         if (!(college in allDecisions)){\n    //           allDecisions[college] = {};\n    //         }\n    //         allDecisions[college][id] = {};\n    //         allDecisions[college][id][\"decision\"] = temp.applied_colleges[college];\n    //         allDecisions[college][id][\"high_school_name\"] = temp.high_school_name;\n    //         allDecisions[college][id][\"gpa\"] = temp.gpa;\n    //         allDecisions[college][id][\"sat_math\"] = temp.sat_math;\n    //         allDecisions[college][id][\"sat_ebrw\"] = temp.sat_ebrw;\n    //         allDecisions[college][id][\"act_composite\"] = temp.act_composite;\n    //         allDecisions[college][id][\"college_class\"] = temp.college_class;\n    //         console.log(allDecisions);\n    //       })\n    //     })\n    //     console.log(allDecisions);\n        \n    //     // Evaluate all decisions\n\n    //   }\n    // });\n\n\n    Object.keys(fullData).forEach((id,index)=>{\n      console.log(id);\n      db.collection('studentProfiles').where(\"userid\",\"==\",id)\n      .get()\n      .then(function(querySnapshot){\n        if (querySnapshot.size == 0){\n          console.log(\"Not Found\");\n        }\n        else if (index != Object.keys(fullData).length-1){\n          querySnapshot.forEach(function(doc) {\n            console.log(\"Found\");\n            let temp = doc.data();\n            Object.keys(temp.applied_colleges).forEach((college)=>{\n              if (!(college in allDecisions)){\n                allDecisions[college] = {};\n              }\n              allDecisions[college][id] = {};\n              allDecisions[college][id][\"decision\"] = temp.applied_colleges[college];\n              allDecisions[college][id][\"high_school_name\"] = temp.high_school_name;\n              allDecisions[college][id][\"gpa\"] = temp.gpa;\n              allDecisions[college][id][\"sat_math\"] = temp.sat_math;\n              allDecisions[college][id][\"sat_ebrw\"] = temp.sat_ebrw;\n              allDecisions[college][id][\"act_composite\"] = temp.act_composite;\n              allDecisions[college][id][\"college_class\"] = temp.college_class;\n            })\n          })\n        }\n        else{\n          querySnapshot.forEach(function(doc) {\n            console.log(\"Found\");\n            let temp = doc.data();\n            Object.keys(temp.applied_colleges).forEach((college)=>{\n              if (!(college in allDecisions)){\n                allDecisions[college] = {};\n              }\n              allDecisions[college][id] = {};\n              allDecisions[college][id][\"decision\"] = temp.applied_colleges[college];\n              allDecisions[college][id][\"high_school_name\"] = temp.high_school_name;\n              allDecisions[college][id][\"gpa\"] = temp.gpa;\n              allDecisions[college][id][\"sat_math\"] = temp.sat_math;\n              allDecisions[college][id][\"sat_ebrw\"] = temp.sat_ebrw;\n              allDecisions[college][id][\"act_composite\"] = temp.act_composite;\n              allDecisions[college][id][\"college_class\"] = temp.college_class;\n            })\n          })\n          \n          // Evaluate all decisions\n          console.log(allDecisions);\n\n          // Object.keys(allDecisions).forEach((college)=>{\n\n          // })\n        }\n      })\n    })\n\n\n    \n  }\n\n  deleteAll = (e) =>{\n    e.preventDefault();\n    db.collection('studentProfiles').get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc) {\n          console.log(\"deleting \" + doc.id);\n          db.collection('studentProfiles').doc(doc.id).delete();\n      })\n    });\n    db.collection('ApprovedDecisions').get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc) {\n          console.log(\"deleting \" + doc.id);\n          db.collection('ApprovedDecisions').doc(doc.id).delete();\n      })\n      db.collection('ApprovedDecisions').add({\n      });\n    });\n    db.collection('QuestionableDecisions').get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc) {\n          console.log(\"deleting \" + doc.id);\n          db.collection('QuestionableDecisions').doc(doc.id).delete();\n      })\n      db.collection('QuestionableDecisions').add({\n      });\n    });\n\n  }\n\n  papaParse = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.toLowerCase().replace(/\\W/g, \"\")\n  }\n\n  //fetch is the api call to the backend\n  // api will respond with json object\n  scrapeResults = () => {\n    var res = fetch(\"http://localhost:8000/scrape\")\n        .then(response => {\n          return response.json();\n          \n        }).then(data =>{\n          console.log(data);\n          var text = JSON.stringify(data, null, \"\\n\");\n          console.log(text);\n          this.setState({scrapeRes: text});\n          return text;\n        });\n  }\n  scrapeUpdateCollegeScorecard = () =>{\n    fetch(\"http://localhost:8000/scrape/updateCsv\")\n        .then((response) => {\n          console.log(response.json());\n        });\n  }\n  scrapeUpdateFirebase(event){\n    event.preventDefault();\n    fetch(\"http://localhost:8000/scrape/updatefirebase\")\n        .then((response)=> {\n        });\n  }\n  scrapeHighschoolData= () =>{\n    fetch(\"http://localhost:8000/scrapehighschools\")\n    .then((response) => {\n      console.log(response.json());\n    });\n  }\n\n\n  approveDecision(userID,userData,dec,college){\n    // Remove from list of Questionable Decisions for that user\n    let decisionsRef = db.collection('QuestionableDecisions');\n    decisionsRef\n      .get()\n      .then(function(querySnapshot) {\n          querySnapshot.forEach(function(doc) {\n              let temp = doc.data();\n\n              db.collection('QuestionableDecisions').doc(doc.id).update({\n                [userID+\".colleges.\"+college]: firebase.firestore.FieldValue.delete(),\n              })\n          });\n      })\n      .catch(function(error) {\n          console.log(\"Error getting documents: \", error);\n      });\n\n\n      // Add to list of Approved Decisions for that college with this userID.\n      let approvedRef = db.collection('ApprovedDecisions');\n      approvedRef\n      .get()\n      .then(function(querySnapshot) {\n          querySnapshot.forEach(function(doc) {\n              let temp = doc.data();\n\n              db.collection('ApprovedDecisions').doc(doc.id).update({\n                [college+\".\"+userID]: {\n                  act_composite: userData[\"act_composite\"],\n                  gpa: userData[\"gpa\"],\n                  sat_ebrw: userData[\"sat_ebrw\"],\n                  sat_math: userData[\"sat_math\"],\n                  decision: dec,\n                },\n              })\n          });\n      })\n      .catch(function(error) {\n          console.log(\"Error getting documents: \", error);\n      });\n  }\n\n  denyDecision(userID,college){\n    console.log(userID,college);\n    let decisionsRef = db.collection('QuestionableDecisions');\n    decisionsRef\n      .get()\n      .then(function(querySnapshot) {\n          querySnapshot.forEach(function(doc) {\n              let temp = doc.data();\n\n              db.collection('QuestionableDecisions').doc(doc.id).update({\n                [userID+\".colleges.\"+college+\".reviewed\"]: true,\n              })\n          });\n      })\n      .catch(function(error) {\n          console.log(\"Error getting documents: \", error);\n      });\n  }\n\n  render() {\n    let temp = this.props.questionableDecisions[\"QuestionableDecisions\"];\n    let temp2 = {};\n    if(temp){\n      temp2 = temp[Object.keys(temp)[0]];\n    }\n    console.log(temp2);\n\n    return (\n      <div className=\"outlet profile-container\">\n        <form onSubmit={this.handleSubmit} className=\"profile-form white\">\n        <div>\n          <h4>Student Profile Data</h4>\n\n          <CSVReader \n          cssClass = \"react-csv-input\" \n          label = \"Select Student Profile Dataset\"\n          onFileLoaded = {this.handleFileLoad}\n          parserOptions = {this.papaParse}\n          />\n\n          <CSVReader \n          cssClass = \"react-csv-input\" \n          label = \"Select Application Dataset\"\n          onFileLoaded = {this.handleApplicationFileLoad}\n          parserOptions = {this.papaParse}\n          />\n          <button className=\"delete-profiles btn red lighten-1 z-depth-0 profile-button\" onClick = {this.deleteAll}>Delete All Student Profiles</button>\n        </div>\n        <h4>Questionable Decisions</h4>\n\n\n          <table className=\"striped\">\n            <thead>\n              <tr>\n                  <th className=\"search-header\"><a className=\"search-header-text\">User ID</a></th>\n                  <th className=\"search-header\"><a className=\"search-header-text\">College</a></th>\n                  <th className=\"search-header\"><a className=\"search-header-text\">Decision</a></th>\n                  <th className=\"search-header\"><a className=\"search-header-text\">GPA</a></th>\n                  <th className=\"search-header\"><a className=\"search-header-text\">SAT Math</a></th>\n                  <th className=\"search-header\"><a className=\"search-header-text\">SAT EBRW</a></th>\n                  <th className=\"search-header\"><a className=\"search-header-text\">ACT Composite</a></th>\n                  <th className=\"search-header\"><a className=\"search-header-text\">Review</a></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {Object.keys(temp2).map((decision) => {\n                console.log(temp2[decision]);\n                return Object.keys(temp2[decision][\"colleges\"]).map((college) => {\n                  let temp = temp2[decision];\n                  console.log(decision,college);\n                  if (!temp[\"colleges\"][college][\"reviewed\"]){\n                    return  <tr className=\"search-item\">\n                            <td className=\"search-item-name\">{decision}</td>\n                            \n                            <td className=\"search-item\">{temp[\"colleges\"][college][\"name\"]}</td>\n                            \n                            <td className=\"search-item\">{temp[\"colleges\"][college][\"decision\"]}</td>\n                            \n                            {temp2[decision][\"gpa\"] ? (<td className=\"search-item\">{temp2[decision][\"gpa\"]}</td>) : (<td className=\"search-item\">N/A</td>)}\n                            {temp2[decision][\"sat_math\"] ? (<td className=\"search-item\">{temp2[decision][\"sat_math\"]}</td>) : (<td className=\"search-item\">N/A</td>)}\n                            {temp2[decision][\"sat_ebrw\"] ? (<td className=\"search-item\">{temp2[decision][\"sat_ebrw\"]}</td>) : (<td className=\"search-item\">N/A</td>)}\n                            {temp2[decision][\"act_composite\"] ? (<td className=\"search-item\">{temp2[decision][\"act_composite\"]}</td>) : (<td className=\"search-item\">N/A</td>)}\n                            <td>\n                              <a class=\"btn-floating btn-large waves-effect waves-light green\" onClick={()=>this.approveDecision(decision,temp2[decision],temp[\"colleges\"][college][\"decision\"],college)}>✓</a>\n                              <a class=\"btn-floating btn-large waves-effect waves-light red\" onClick={()=>this.denyDecision(decision,college)}>✗</a>\n                            </td>\n                        </tr>\n                  }\n                  else{\n                    return\n                  }\n                });\n              })}\n            </tbody>\n          </table>\n          <div className=\"input-field admin-button-container\">\n            <h4>Scraping</h4>\n            Scrape and update the system\n            <button type=\"button\" onClick={this.scrapeUpdateFirebase} className=\"btn green lighten-1 z-depth-0 profile-button\">Scrape & Update System</button>\n          </div>\n          <span className=\"scrapeResults\">{this.state.scrapeRes}</span>\n        </form>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      questionableDecisions: state.firestore.data,\n      auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect(props => {\n      if (!props.auth.uid) \n      {\n          return [];\n      }\n      else\n      {\n          return [\n          { collection: 'QuestionableDecisions'}];\n      }\n  }),\n)(AdminScreen);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Navbar from './components/navbar/Navbar.js';\nimport HomeScreen from './components/home/HomeScreen.js';\nimport UserProfileScreen from './components/user/UserProfileScreen.js';\nimport RegisterScreen from './components/register/RegisterScreen.js';\nimport LoginScreen from './components/login/LoginScreen.js';\nimport HighSchoolSearchScreen from './components/high_schools/HighSchoolSearchScreen.js';\nimport CollegeSearchScreen from './components/colleges/CollegeSearchScreen.js';\nimport CollegeInfoScreen from './components/colleges/CollegeInfoScreen.js';\nimport AdminScreen from './components/admin/AdminScreen.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\" };\n  }\n  callAPI(){\n    fetch(\"http://localhost:8000/api\")\n      .then(res => res.text())\n      .then(res => this.setState({ apiResponse: res}));\n  }\n  componentWillMount() {\n    this.callAPI();\n  }\n  \n  render() {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route path=\"/user\" component={UserProfileScreen} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route path=\"/high_schools\" component={HighSchoolSearchScreen} />\n              <Route path=\"/colleges\" component={CollegeSearchScreen} />\n              <Route path=\"/college/:id\" component={CollegeInfoScreen} />\n              <Route path=\"/admin\" component={AdminScreen} />\n              <Route path=\"/:any\" component={HomeScreen} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n  }\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionCreators from '../actions/actionCreators'\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\nconst initState = {};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionCreators.LOGIN_ERROR:\n      return {\n        ...state,\n        authError: 'Login fail',\n      };\n    case actionCreators.LOGIN_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.LOGOUT_SUCCESS:\n      return state;\n    case actionCreators.REGISTER_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.REGISTER_ERROR:\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","const initState = {\n    todoLists: []\n};\n\nconst todoListReducer = (state = initState, action) => {\n    switch (action.type) {\n        /* IF YOU HAVE ANY TODO LIST EDITING REDUCERS ADD THEM HERE */ \n        default:\n            return state;\n            break;\n    }\n};\n\nexport default todoListReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer';\nimport todoListReducer from './todoListReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todoList: todoListReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../firebase';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'users',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase,\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/main.css';\nimport 'materialize-css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactReduxFirebaseApp from './store/ReactReduxFirebaseApp'\n\nReactDOM.render(\n  <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}